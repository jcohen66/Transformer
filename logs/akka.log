[INFO] [2015-11-21 12:30:48,749] [transformer-akka.actor.default-dispatcher-4] a.e.s.Slf4jLogger: Slf4jLogger started
[INFO] [2015-11-21 12:30:48,769] [transformer-akka.actor.default-dispatcher-3] a.a.ActorSystemImpl: {
    # merge of application.conf: 14,reference.conf: 8
    "akka" : {
        # merge of application.conf: 21,reference.conf: 62
        "actor" : {
            # reference.conf: 74
            # Timeout for ActorSystem.actorOf
            "creation-timeout" : "20s",
            # application.conf: 22
            "debug" : {
                # application.conf: 24
                "autoreceive" : "on",
                # application.conf: 27
                "event-stream" : "on",
                # application.conf: 26
                "fsm" : "on",
                # application.conf: 25
                "lifecycle" : "on",
                # application.conf: 23
                "receive" : "on",
                # application.conf: 29
                "router-misconfiguration" : "on",
                # application.conf: 28
                "unhandled" : "on"
            },
            # reference.conf: 238
            "default-dispatcher" : {
                # reference.conf: 334
                # For BalancingDispatcher: If the balancing dispatcher should attempt to
                # schedule idle actors using the same dispatcher when a message comes in,
                # and the dispatchers ExecutorService is not fully busy already.
                "attempt-teamwork" : "on",
                # reference.conf: 263
                # This will be used if you have set "executor = "default-executor"".
                # If an ActorSystem is created with a given ExecutionContext, this
                # ExecutionContext will be used as the default executor for all
                # dispatchers in the ActorSystem configured with
                # executor = "default-executor". Note that "default-executor"
                # is the default value for executor, and therefore used if not
                # specified otherwise. If no ExecutionContext is given,
                # the executor configured in "fallback" will be used.
                "default-executor" : {
                    # reference.conf: 264
                    "fallback" : "fork-join-executor"
                },
                # reference.conf: 253
                # Which kind of ExecutorService to use for this dispatcher
                # Valid options:
                #  - "default-executor" requires a "default-executor" section
                #  - "fork-join-executor" requires a "fork-join-executor" section
                #  - "thread-pool-executor" requires a "thread-pool-executor" section
                #  - A FQCN of a class extending ExecutorServiceConfigurator
                "executor" : "default-executor",
                # reference.conf: 268
                # This will be used if you have set "executor = "fork-join-executor""
                "fork-join-executor" : {
                    # reference.conf: 275
                    # The parallelism factor is used to determine thread pool size using the
                    # following formula: ceil(available processors * factor). Resulting size
                    # is then bounded by the parallelism-min and parallelism-max values.
                    "parallelism-factor" : 3,
                    # reference.conf: 278
                    # Max number of threads to cap factor-based parallelism number to
                    "parallelism-max" : 64,
                    # reference.conf: 270
                    # Min number of threads to cap factor-based parallelism number to
                    "parallelism-min" : 8
                },
                # reference.conf: 339
                # If this dispatcher requires a specific type of mailbox, specify the
                # fully-qualified class name here; the actually created mailbox will
                # be a subtype of this type. The empty string signifies no requirement.
                "mailbox-requirement" : "",
                # reference.conf: 322
                # How long time the dispatcher will wait for new actors until it shuts down
                "shutdown-timeout" : "1s",
                # reference.conf: 282
                # This will be used if you have set "executor = "thread-pool-executor""
                "thread-pool-executor" : {
                    # reference.conf: 318
                    # Allow core threads to time out
                    "allow-core-timeout" : "on",
                    # reference.conf: 293
                    # The core pool size factor is used to determine thread pool core size
                    # using the following formula: ceil(available processors * factor).
                    # Resulting size is then bounded by the core-pool-size-min and
                    # core-pool-size-max values.
                    "core-pool-size-factor" : 3,
                    # reference.conf: 296
                    # Max number of threads to cap factor-based number to
                    "core-pool-size-max" : 64,
                    # reference.conf: 287
                    # Min number of threads to cap factor-based core number to
                    "core-pool-size-min" : 8,
                    # reference.conf: 284
                    # Keep alive time for threads
                    "keep-alive-time" : "60s",
                    # reference.conf: 304
                    # Max no of threads (if using a bounded task queue) is determined by
                    # calculating: ceil(available processors * factor)
                    "max-pool-size-factor" : 3,
                    # reference.conf: 308
                    # Max number of threads to cap factor-based max number to
                    # (if using a  bounded task queue)
                    "max-pool-size-max" : 64,
                    # reference.conf: 300
                    # Minimum number of threads to cap factor-based max number to
                    # (if using a bounded task queue)
                    "max-pool-size-min" : 8,
                    # reference.conf: 311
                    # Specifies the bounded capacity of the task queue (< 1 == unbounded)
                    "task-queue-size" : -1,
                    # reference.conf: 315
                    # Specifies which type of task queue will be used, can be "array" or
                    # "linked" (default)
                    "task-queue-type" : "linked"
                },
                # reference.conf: 326
                # Throughput defines the number of messages that are processed in a batch
                # before the thread is returned to the pool. Set to 1 for as fair as possible.
                "throughput" : 5,
                # reference.conf: 329
                # Throughput deadline for Dispatcher, set to 0 or negative for no deadline
                "throughput-deadline-time" : "0ms",
                # reference.conf: 245
                # Must be one of the following
                # Dispatcher, PinnedDispatcher, or a FQCN to a class inheriting
                # MessageDispatcherConfigurator with a public constructor with
                # both com.typesafe.config.Config parameter and
                # akka.dispatch.DispatcherPrerequisites parameters.
                # PinnedDispatcher must be used together with executor=thread-pool-executor.
                "type" : "Dispatcher"
            },
            # reference.conf: 342
            "default-mailbox" : {
                # reference.conf: 353
                # If the mailbox is bounded then it uses this setting to determine its
                # capacity. The provided value must be positive.
                # NOTICE:
                # Up to version 2.1 the mailbox type was determined based on this setting;
                # this is no longer the case, the type must explicitly be a bounded mailbox.
                "mailbox-capacity" : 1000,
                # reference.conf: 358
                # If the mailbox is bounded then this is the timeout for enqueueing
                # in case the mailbox is full. Negative values signify infinite
                # timeout, which should be avoided as it bears the risk of dead-lock.
                "mailbox-push-timeout-time" : "10s",
                # reference.conf: 346
                # FQCN of the MailboxType. The Class of the FQCN must have a public
                # constructor with
                # (akka.actor.ActorSystem.Settings, com.typesafe.config.Config) parameters.
                "mailbox-type" : "akka.dispatch.UnboundedMailbox",
                # reference.conf: 364
                # For Actor with Stash: The default capacity of the stash.
                # If negative (or zero) then an unbounded stash is used (default)
                # If positive then a bounded stash is used and the capacity is set using
                # the property
                "stash-capacity" : -1
            },
            # reference.conf: 118
            "deployment" : {
                # reference.conf: 121
                # deployment id pattern - on the format: /parent/child etc.
                "default" : {
                    # reference.conf: 127
                    # The id of the dispatcher to use for this actor.
                    # If undefined or empty the dispatcher specified in code
                    # (Props.withDispatcher) is used, or default-dispatcher if not
                    # specified at all.
                    "dispatcher" : "",
                    # reference.conf: 135
                    # The id of the mailbox to use for this actor.
                    # If undefined or empty the default mailbox of the configured dispatcher
                    # is used or if there is no mailbox configuration the mailbox specified
                    # in code (Props.withMailbox) is used.
                    # If there is a mailbox defined in the configured dispatcher then that
                    # overrides this setting.
                    "mailbox" : "",
                    # reference.conf: 160
                    # number of children to create in case of a router;
                    # this setting is ignored if routees.paths is given
                    "nr-of-instances" : 1,
                    # reference.conf: 191
                    # Routers with dynamically resizable number of routees; this feature is
                    # enabled by including (parts of) this section in the deployment
                    "resizer" : {
                        # reference.conf: 229
                        # Fraction of routees to be removed when the resizer reaches the
                        # backoffThreshold.
                        # For example, 0.1 would decrease 10% (rounded up), i.e. if current
                        # capacity is 9 it will request an decrease of 1 routee.
                        "backoff-rate" : 0.1,
                        # reference.conf: 223
                        # Minimum fraction of busy routees before backing off.
                        # For example, if this is 0.3, then we'll remove some routees only when
                        # less than 30% of routees are busy, i.e. if current capacity is 10 and
                        # 3 are busy then the capacity is unchanged, but if 2 or less are busy
                        # the capacity is decreased.
                        # Use 0.0 or negative to avoid removal of routees.
                        "backoff-threshold" : 0.3,
                        # reference.conf: 193
                        "enabled" : "off",
                        # reference.conf: 196
                        # The fewest number of routees the router should ever have.
                        "lower-bound" : 1,
                        # reference.conf: 233
                        # Number of messages between resize operation.
                        # Use 1 to resize before each message.
                        "messages-per-resize" : 10,
                        # reference.conf: 210
                        # Threshold used to evaluate if a routee is considered to be busy
                        # (under pressure). Implementation depends on this value (default is 1).
                        # 0:   number of routees currently processing a message.
                        # 1:   number of routees currently processing a message has
                        #      some messages in mailbox.
                        # > 1: number of routees with at least the configured pressure-threshold
                        #      messages in their mailbox. Note that estimating mailbox size of
                        #      default UnboundedMailbox is O(N) operation.
                        "pressure-threshold" : 1,
                        # reference.conf: 215
                        # Percentage to increase capacity whenever all routees are busy.
                        # For example, 0.2 would increase 20% (rounded up), i.e. if current
                        # capacity is 6 it will request an increase of 2 more routees.
                        "rampup-rate" : 0.2,
                        # reference.conf: 200
                        # The most number of routees the router should ever have.
                        # Must be greater than or equal to lower-bound.
                        "upper-bound" : 10
                    },
                    # reference.conf: 173
                    "routees" : {
                        # reference.conf: 177
                        # Alternatively to giving nr-of-instances you can specify the full
                        # paths of those actors which should be routed to. This setting takes
                        # precedence over nr-of-instances
                        "paths" : []
                    },
                    # reference.conf: 156
                    # routing (load-balance) scheme to use
                    # - available: "from-code", "round-robin", "random", "smallest-mailbox",
                    #              "scatter-gather", "broadcast"
                    # - or:        Fully qualified class name of the router class.
                    #              The class must extend akka.routing.CustomRouterConfig and
                    #              have a public constructor with com.typesafe.config.Config
                    #              and optional akka.actor.DynamicAccess parameter.
                    # - default is "from-code";
                    # Whether or not an actor is transformed to a Router is decided in code
                    # only (Props.withRouter). The type of router can be overridden in the
                    # configuration; specifying "from-code" means that the values specified
                    # in the code shall be used.
                    # In case of routing, the actors to be routed to can be specified
                    # in several ways:
                    # - nr-of-instances: will create that many children
                    # - routees.paths: will route messages to these paths using ActorSelection,
                    #   i.e. will not create children
                    # - resizer: dynamically resizable number of routees as specified in
                    #   resizer below
                    "router" : "from-code",
                    # reference.conf: 168
                    "tail-chopping-router" : {
                        # reference.conf: 170
                        # interval is duration between sending message to next routee
                        "interval" : "10 milliseconds"
                    },
                    # reference.conf: 166
                    # number of virtual nodes per node for consistent-hashing router
                    "virtual-nodes-factor" : 10,
                    # reference.conf: 163
                    # within is the timeout used for routers containing future calls
                    "within" : "5 seconds"
                }
            },
            # reference.conf: 462
            # Configuration items which are used by the akka.actor.ActorDSL._ methods
            "dsl" : {
                # reference.conf: 468
                # Default timeout to assume for operations like Inbox.receive et al
                "default-timeout" : "5s",
                # reference.conf: 465
                # Maximum queue size of the actor created by newInbox(); this protects
                # against faulty programs which use select() and consistently miss messages
                "inbox-size" : 1000
            },
            # reference.conf: 71
            # The guardian "/user" will use this class to obtain its supervisorStrategy.
            # It needs to be a subclass of akka.actor.SupervisorStrategyConfigurator.
            # In addition to the default there is akka.actor.StoppingSupervisorStrategy.
            "guardian-supervisor-strategy" : "akka.actor.DefaultSupervisorStrategy",
            # reference.conf: 367
            "mailbox" : {
                # reference.conf: 410
                "bounded-deque-based" : {
                    # reference.conf: 414
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.BoundedDequeBasedMailbox"
                },
                # reference.conf: 396
                "bounded-queue-based" : {
                    # reference.conf: 400
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.BoundedMailbox"
                },
                # reference.conf: 374
                # Mapping between message queue semantics and mailbox configurations.
                # Used by akka.dispatch.RequiresMessageQueue[T] to enforce different
                # mailbox types on actors.
                # If your Actor implements RequiresMessageQueue[T], then when you create
                # an instance of that actor its mailbox type will be decided by looking
                # up a mailbox configuration via T in this mapping
                "requirements" : {
                    # reference.conf: 384
                    "akka.dispatch.BoundedDequeBasedMessageQueueSemantics" : "akka.actor.mailbox.bounded-deque-based",
                    # reference.conf: 378
                    "akka.dispatch.BoundedMessageQueueSemantics" : "akka.actor.mailbox.bounded-queue-based",
                    # reference.conf: 380
                    "akka.dispatch.DequeBasedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-deque-based",
                    # reference.conf: 386
                    "akka.dispatch.MultipleConsumerSemantics" : "akka.actor.mailbox.unbounded-queue-based",
                    # reference.conf: 382
                    "akka.dispatch.UnboundedDequeBasedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-deque-based",
                    # reference.conf: 376
                    "akka.dispatch.UnboundedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-queue-based"
                },
                # reference.conf: 403
                "unbounded-deque-based" : {
                    # reference.conf: 407
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.UnboundedDequeBasedMailbox"
                },
                # reference.conf: 389
                "unbounded-queue-based" : {
                    # reference.conf: 393
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.UnboundedMailbox"
                }
            },
            # reference.conf: 66
            # FQCN of the ActorRefProvider to be used; the below is the built-in default,
            # another one is akka.remote.RemoteActorRefProvider in the akka-remote bundle.
            "provider" : "akka.actor.LocalActorRefProvider",
            # reference.conf: 78
            # Frequency with which stopping actors are prodded in case they had to be
            # removed from their parents
            "reaper-interval" : "5s",
            # reference.conf: 100
            "router" : {
                # reference.conf: 100
                # Mapping between ´deployment.router' short names to fully qualified class names
                "type-mapping" : {
                    # reference.conf: 106
                    "balancing-pool" : "akka.routing.BalancingPool",
                    # reference.conf: 109
                    "broadcast-group" : "akka.routing.BroadcastGroup",
                    # reference.conf: 108
                    "broadcast-pool" : "akka.routing.BroadcastPool",
                    # reference.conf: 115
                    "consistent-hashing-group" : "akka.routing.ConsistentHashingGroup",
                    # reference.conf: 114
                    "consistent-hashing-pool" : "akka.routing.ConsistentHashingPool",
                    # reference.conf: 101
                    "from-code" : "akka.routing.NoRouter",
                    # reference.conf: 105
                    "random-group" : "akka.routing.RandomGroup",
                    # reference.conf: 104
                    "random-pool" : "akka.routing.RandomPool",
                    # reference.conf: 103
                    "round-robin-group" : "akka.routing.RoundRobinGroup",
                    # reference.conf: 102
                    "round-robin-pool" : "akka.routing.RoundRobinPool",
                    # reference.conf: 111
                    "scatter-gather-group" : "akka.routing.ScatterGatherFirstCompletedGroup",
                    # reference.conf: 110
                    "scatter-gather-pool" : "akka.routing.ScatterGatherFirstCompletedPool",
                    # reference.conf: 107
                    "smallest-mailbox-pool" : "akka.routing.SmallestMailboxPool",
                    # reference.conf: 113
                    "tail-chopping-group" : "akka.routing.TailChoppingGroup",
                    # reference.conf: 112
                    "tail-chopping-pool" : "akka.routing.TailChoppingPool"
                }
            },
            # reference.conf: 456
            # Class to Serializer binding. You only need to specify the name of an
            # interface or abstract base class of the messages. In case of ambiguity it
            # is using the most specific configured class, or giving a warning and
            # choosing the “first” one.
            # 
            # To disable one of the default serializers, assign its class to "none", like
            # "java.io.Serializable" = none
            "serialization-bindings" : {
                # reference.conf: 457
                "[B" : "bytes",
                # reference.conf: 458
                "java.io.Serializable" : "java"
            },
            # reference.conf: 87
            # Serializes and deserializes creators (in Props) to ensure that they can be
            # sent over the network, this is only intended for testing. Purely local deployments
            # as marked with deploy.scope == LocalScope are exempt from verification.
            "serialize-creators" : "off",
            # reference.conf: 82
            # Serializes and deserializes (non-primitive) messages to ensure immutability,
            # this is only intended for testing.
            "serialize-messages" : "off",
            # reference.conf: 444
            # Entries for pluggable serializers and their bindings.
            "serializers" : {
                # reference.conf: 446
                "bytes" : "akka.serialization.ByteArraySerializer",
                # reference.conf: 445
                "java" : "akka.serialization.JavaSerializer"
            },
            # reference.conf: 94
            "typed" : {
                # reference.conf: 96
                # Default timeout for typed actor methods with non-void return type
                "timeout" : "5s"
            },
            # reference.conf: 92
            # Timeout for send operations to top-level actors which are in the process
            # of being started. This is only relevant if using a bounded mailbox or the
            # CallingThreadDispatcher for a top-level actor.
            "unstarted-push-timeout" : "10s"
        },
        # reference.conf: 56
        # Toggles whether threads created by this ActorSystem should be daemons or not
        "daemonic" : "off",
        # reference.conf: 53
        # List FQCN of extensions which shall be loaded at actor system startup.
        # Should be on the format: 'extensions = ["foo", "bar"]' etc.
        # See the Akka Documentation for more info about Extensions
        "extensions" : [],
        # reference.conf: 13
        # Home directory of Akka, modules in the deploy directory will be loaded
        "home" : "",
        # reference.conf: 511
        "io" : {
            # reference.conf: 515
            # By default the select loops run on dedicated threads, hence using a
            # PinnedDispatcher
            "pinned-dispatcher" : {
                # reference.conf: 517
                "executor" : "thread-pool-executor",
                # reference.conf: 518
                "thread-pool-executor" : {
                    # reference.conf: 518
                    "allow-core-pool-timeout" : "off"
                },
                # reference.conf: 516
                "type" : "PinnedDispatcher"
            },
            # reference.conf: 521
            "tcp" : {
                # reference.conf: 543
                # The maximum number of connection that are accepted in one go,
                # higher numbers decrease latency, lower numbers increase fairness on
                # the worker-dispatcher
                "batch-accept-limit" : 10,
                # reference.conf: 551
                # The maximal number of direct buffers kept in the direct buffer pool for
                # reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf: 547
                # The number of bytes per direct buffer in the pool used to read or write
                # network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf: 581
                # Fully qualified config path which holds the dispatcher configuration
                # on which file IO tasks are scheduled
                "file-io-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 589
                # The maximum number of bytes (or "unlimited") to transfer in one batch
                # when using `WriteFile` command which uses `FileChannel.transferTo` to
                # pipe files to a TCP socket. On some OS like Linux `FileChannel.transferTo`
                # may block for a long time when network IO is faster than file IO.
                # Decreasing the value may improve fairness while increasing may improve
                # throughput.
                "file-io-transferTo-limit" : "512 KiB",
                # reference.conf: 594
                # The number of times to retry the `finishConnect` call after being notified about
                # OP_CONNECT. Retries are needed if the OP_CONNECT notification doesn't imply that
                # `finishConnect` will succeed, which is the case on Android.
                "finish-connect-retries" : 5,
                # reference.conf: 577
                # Fully qualified config path which holds the dispatcher configuration
                # for the selector management actors
                "management-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 533
                # Maximum number of open channels supported by this TCP module; there is
                # no intrinsic general limit, this setting is meant to enable DoS
                # protection by limiting the number of concurrently connected clients.
                # Also note that this is a "soft" limit; in certain cases the implementation
                # will accept a few connections more or a few less than the number configured
                # here. Must be an integer > 0 or "unlimited".
                "max-channels" : 256000,
                # reference.conf: 560
                # The maximum number of bytes delivered by a `Received` message. Before
                # more data is read from the network the connection actor will try to
                # do other work.
                "max-received-message-size" : "unlimited",
                # reference.conf: 525
                # The number of selectors to stripe the served channels over; each of
                # these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf: 555
                # The duration a connection actor waits for a `Register` message from
                # its commander before aborting the connection.
                "register-timeout" : "5s",
                # reference.conf: 538
                # When trying to assign a new connection to a selector and the chosen
                # selector is at full capacity, retry selector choosing and assignment
                # this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf: 569
                # Fully qualified config path which holds the dispatcher configuration
                # to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf: 565
                # Enable fine grained logging of what goes on inside the implementation.
                # Be aware that this may log more than once per message sent to the actors
                # of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf: 603
                # On Windows connection aborts are not reliably detected unless an OP_READ is
                # registered on the selector _after_ the connection has been reset. This
                # workaround enables an OP_CONNECT which forces the abort to be visible on Windows.
                # Enabling this setting on other platforms than Windows will cause various failures
                # and undefined behavior.
                # Possible values of this key are on, off and auto where auto will enable the
                # workaround if Windows is detected automatically.
                "windows-connection-abort-workaround-enabled" : "auto",
                # reference.conf: 573
                # Fully qualified config path which holds the dispatcher configuration
                # for the read/write worker actors
                "worker-dispatcher" : "akka.actor.default-dispatcher"
            },
            # reference.conf: 606
            "udp" : {
                # reference.conf: 642
                # The maximal number of direct buffers kept in the direct buffer pool for
                # reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf: 638
                # The number of bytes per direct buffer in the pool used to read or write
                # network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf: 664
                # Fully qualified config path which holds the dispatcher configuration
                # for the selector management actors
                "management-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 615
                # Maximum number of open channels supported by this UDP module Generally
                # UDP does not require a large number of channels, therefore it is
                # recommended to keep this setting low.
                "max-channels" : 4096,
                # reference.conf: 610
                # The number of selectors to stripe the served channels over; each of
                # these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf: 634
                # The maximum number of datagrams that are read in one go,
                # higher numbers decrease latency, lower numbers increase fairness on
                # the worker-dispatcher
                "receive-throughput" : 3,
                # reference.conf: 647
                # The maximum number of bytes delivered by a `Received` message. Before
                # more data is read from the network the connection actor will try to
                # do other work.
                "received-message-size-limit" : "unlimited",
                # reference.conf: 624
                # The select loop can be used in two modes:
                # - setting "infinite" will select without a timeout, hogging a thread
                # - setting a positive timeout will do a bounded select call,
                #   enabling sharing of a single thread between multiple selectors
                #   (in this case you will have to use a different configuration for the
                #   selector-dispatcher, e.g. using "type=Dispatcher" with size 1)
                # - setting it to zero means polling, i.e. calling selectNow()
                "select-timeout" : "infinite",
                # reference.conf: 629
                # When trying to assign a new connection to a selector and the chosen
                # selector is at full capacity, retry selector choosing and assignment
                # this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf: 656
                # Fully qualified config path which holds the dispatcher configuration
                # to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf: 652
                # Enable fine grained logging of what goes on inside the implementation.
                # Be aware that this may log more than once per message sent to the actors
                # of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf: 660
                # Fully qualified config path which holds the dispatcher configuration
                # for the read/write worker actors
                "worker-dispatcher" : "akka.actor.default-dispatcher"
            },
            # reference.conf: 667
            "udp-connected" : {
                # reference.conf: 703
                # The maximal number of direct buffers kept in the direct buffer pool for
                # reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf: 699
                # The number of bytes per direct buffer in the pool used to read or write
                # network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf: 725
                # Fully qualified config path which holds the dispatcher configuration
                # for the selector management actors
                "management-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 676
                # Maximum number of open channels supported by this UDP module Generally
                # UDP does not require a large number of channels, therefore it is
                # recommended to keep this setting low.
                "max-channels" : 4096,
                # reference.conf: 671
                # The number of selectors to stripe the served channels over; each of
                # these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf: 695
                # The maximum number of datagrams that are read in one go,
                # higher numbers decrease latency, lower numbers increase fairness on
                # the worker-dispatcher
                "receive-throughput" : 3,
                # reference.conf: 708
                # The maximum number of bytes delivered by a `Received` message. Before
                # more data is read from the network the connection actor will try to
                # do other work.
                "received-message-size-limit" : "unlimited",
                # reference.conf: 685
                # The select loop can be used in two modes:
                # - setting "infinite" will select without a timeout, hogging a thread
                # - setting a positive timeout will do a bounded select call,
                #   enabling sharing of a single thread between multiple selectors
                #   (in this case you will have to use a different configuration for the
                #   selector-dispatcher, e.g. using "type=Dispatcher" with size 1)
                # - setting it to zero means polling, i.e. calling selectNow()
                "select-timeout" : "infinite",
                # reference.conf: 690
                # When trying to assign a new connection to a selector and the chosen
                # selector is at full capacity, retry selector choosing and assignment
                # this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf: 717
                # Fully qualified config path which holds the dispatcher configuration
                # to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf: 713
                # Enable fine grained logging of what goes on inside the implementation.
                # Be aware that this may log more than once per message sent to the actors
                # of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf: 721
                # Fully qualified config path which holds the dispatcher configuration
                # for the read/write worker actors
                "worker-dispatcher" : "akka.actor.default-dispatcher"
            }
        },
        # reference.conf: 60
        # JVM shutdown, System.exit(-1), in case of a fatal error,
        # such as OutOfMemoryError
        "jvm-exit-on-fatal-error" : "on",
        # application.conf: 17
        "log-config-on-start" : "on",
        # reference.conf: 43
        # Log at info level when messages are sent to dead letters.
        # Possible values:
        # on: all dead letters are logged
        # off: no logging of dead letters
        # n: positive integer, number of dead letters that will be logged
        "log-dead-letters" : 10,
        # reference.conf: 48
        # Possibility to turn off logging of dead letters while the actor system
        # is shutting down. Logging is only done when enabled by 'log-dead-letters'
        # setting.
        "log-dead-letters-during-shutdown" : "on",
        # reference.conf: 22
        # Loggers are created and registered synchronously during ActorSystem
        # start-up, and since they are actors, this timeout is used to bound the
        # waiting time
        "logger-startup-timeout" : "5s",
        # application.conf: 19
        "loggers" : [
            # application.conf: 19
            "akka.event.slf4j.Slf4jLogger"
        ],
        # application.conf: 15
        "loglevel" : "DEBUG",
        # reference.conf: 476
        # Used to set the behavior of the scheduler.
        # Changing the default values may change the system behavior drastically so make
        # sure you know what you're doing! See the Scheduler section of the Akka
        # Documentation for more details.
        "scheduler" : {
            # reference.conf: 502
            # This setting selects the timer implementation which shall be loaded at
            # system start-up.
            # The class given here must implement the akka.actor.Scheduler interface
            # and offer a public constructor which takes three arguments:
            #  1) com.typesafe.config.Config
            #  2) akka.event.LoggingAdapter
            #  3) java.util.concurrent.ThreadFactory
            "implementation" : "akka.actor.LightArrayRevolverScheduler",
            # reference.conf: 508
            # When shutting down the scheduler, there will typically be a thread which
            # needs to be stopped, and this timeout determines how long to wait for
            # that to happen. In case of timeout the shutdown of the actor system will
            # proceed without running possibly still enqueued tasks.
            "shutdown-timeout" : "5s",
            # reference.conf: 486
            # The LightArrayRevolverScheduler is used as the default scheduler in the
            # system. It does not execute the scheduled tasks on exact time, but on every
            # tick, it will run everything that is (over)due. You can increase or decrease
            # the accuracy of the execution timing by specifying smaller or larger tick
            # duration. If you are scheduling a lot of tasks you should consider increasing
            # the ticks per wheel.
            # Note that it might take up to 1 tick to stop the Timer, so setting the
            # tick-duration to a high value will make shutting down the actor system
            # take longer.
            "tick-duration" : "10ms",
            # reference.conf: 493
            # The timer uses a circular wheel of buckets to store the timer tasks.
            # This should be set such that the majority of scheduled timeouts (for high
            # scheduling frequency) will be shorter than one rotation of the wheel
            # (ticks-per-wheel * ticks-duration)
            # THIS MUST BE A POWER OF TWO!
            "ticks-per-wheel" : 512
        },
        # application.conf: 16
        "stdout-loglevel" : "DEBUG",
        # reference.conf: 10
        # Akka version, checked against the runtime version of Akka.
        "version" : "2.3.9"
    },
    # application.conf: 35
    "atmos" : {
        # application.conf: 36
        "trace" : {
            # application.conf: 37
            # enable tracing
            "enabled" : true,
            # application.conf: 38
            # give this node a name
            "node" : "AwesomeApplication",
            # application.conf: 46
            "sampling" : {
                # application.conf: 48
                # sample every 100th trace in this subtree
                "/actors/*" : 1,
                # application.conf: 47
                # sample every trace for someActor
                "/user/someActor" : 1
            },
            # application.conf: 40
            "traceable" : {
                # application.conf: 43
                # other actors are not traced
                "*" : "off",
                # application.conf: 41
                # trace the someActor
                "/actors/*" : "on",
                # application.conf: 42
                # trace all actors in this subtree
                "/user/actors/*" : "on"
            }
        }
    },
    # system properties
    "awt" : {
        # system properties
        "toolkit" : "sun.lwawt.macosx.LWCToolkit"
    },
    # system properties
    "file" : {
        # system properties
        "encoding" : {
            # system properties
            "pkg" : "sun.io"
        },
        # system properties
        "separator" : "/"
    },
    # system properties
    "ftp" : {
        # system properties
        "nonProxyHosts" : "local|*.local|169.254/16|*.169.254/16"
    },
    # system properties
    "gopherProxySet" : "false",
    # system properties
    "http" : {
        # system properties
        "nonProxyHosts" : "local|*.local|169.254/16|*.169.254/16"
    },
    # system properties
    "idea" : {
        # system properties
        "launcher" : {
            # system properties
            "bin" : {
                # system properties
                "path" : "/Applications/IntelliJ IDEA 15 CE.app/Contents/bin"
            },
            # system properties
            "port" : "7537"
        }
    },
    # system properties
    "java" : {
        # system properties
        "awt" : {
            # system properties
            "graphicsenv" : "sun.awt.CGraphicsEnvironment",
            # system properties
            "printerjob" : "sun.lwawt.macosx.CPrinterJob"
        },
        # system properties
        "class" : {
            # system properties
            "path" : "/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/tools.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Users/jcohen66/src/scala/Transformer/target/scala-2.11/classes:/Users/jcohen66/dev/activator-dist-1.3.6/repository/ch.qos.logback/logback-classic/1.1.3/jars/logback-classic.jar:/Users/jcohen66/dev/activator-dist-1.3.6/repository/ch.qos.logback/logback-core/1.1.3/jars/logback-core.jar:/Users/jcohen66/.ivy2/cache/com.chuusai/shapeless_2.11/jars/shapeless_2.11-1.2.4.jar:/Users/jcohen66/.ivy2/cache/com.fasterxml.jackson.core/jackson-annotations/bundles/jackson-annotations-2.6.3.jar:/Users/jcohen66/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.6.3.jar:/Users/jcohen66/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.6.3.jar:/Users/jcohen66/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-paranamer/bundles/jackson-module-paranamer-2.6.3.jar:/Users/jcohen66/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-scala_2.11/bundles/jackson-module-scala_2.11-2.6.3.jar:/Users/jcohen66/.ivy2/cache/com.lambdaworks/jacks_2.11/jars/jacks_2.11-2.3.3.jar:/Users/jcohen66/.ivy2/cache/com.thoughtworks.paranamer/paranamer/jars/paranamer-2.6.jar:/Users/jcohen66/.ivy2/cache/com.typesafe/config/bundles/config-1.2.1.jar:/Users/jcohen66/.ivy2/cache/com.typesafe.akka/akka-actor_2.11/jars/akka-actor_2.11-2.3.9.jar:/Users/jcohen66/.ivy2/cache/com.typesafe.akka/akka-slf4j_2.11/jars/akka-slf4j_2.11-2.3.9.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-can_2.11/bundles/spray-can_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-http_2.11/bundles/spray-http_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-httpx_2.11/bundles/spray-httpx_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-io_2.11/bundles/spray-io_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-json_2.11/bundles/spray-json_2.11-1.3.1.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-routing_2.11/bundles/spray-routing_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-util_2.11/bundles/spray-util_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/junit/junit/jars/junit-4.12.jar:/Users/jcohen66/dev/activator-dist-1.3.6/repository/org.hamcrest/hamcrest-core/1.3/jars/hamcrest-core.jar:/Users/jcohen66/.ivy2/cache/org.jvnet.mimepull/mimepull/jars/mimepull-1.9.5.jar:/Users/jcohen66/dev/activator-dist-1.3.6/repository/org.mockito/mockito-core/1.9.5/jars/mockito-core.jar:/Users/jcohen66/dev/activator-dist-1.3.6/repository/org.objenesis/objenesis/1.0/jars/objenesis.jar:/Users/jcohen66/.ivy2/cache/org.parboiled/parboiled-core/jars/parboiled-core-1.1.7.jar:/Users/jcohen66/.ivy2/cache/org.parboiled/parboiled-scala_2.11/jars/parboiled-scala_2.11-1.1.7.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.0.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.7.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang/scalap/jars/scalap-2.11.0.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.11/bundles/scala-parser-combinators_2.11-1.0.1.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang.modules/scala-xml_2.11/bundles/scala-xml_2.11-1.0.3.jar:/Users/jcohen66/dev/activator-dist-1.3.6/repository/org.slf4j/slf4j-api/1.7.7/jars/slf4j-api.jar:/Applications/IntelliJ IDEA 15 CE.app/Contents/lib/idea_rt.jar",
            # system properties
            "version" : "52.0"
        },
        # system properties
        "endorsed" : {
            # system properties
            "dirs" : "/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/endorsed"
        },
        # system properties
        "ext" : {
            # system properties
            "dirs" : "/Users/jcohen66/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"
        },
        # system properties
        "home" : "/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre",
        # system properties
        "io" : {
            # system properties
            "tmpdir" : "/var/folders/ds/_nrtvjz90sv_3pxx962xcy7c0000gn/T/"
        },
        # system properties
        "library" : {
            # system properties
            "path" : "/Users/jcohen66/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."
        },
        # system properties
        "runtime" : {
            # system properties
            "name" : "Java(TM) SE Runtime Environment",
            # system properties
            "version" : "1.8.0_60-b27"
        },
        # system properties
        "specification" : {
            # system properties
            "name" : "Java Platform API Specification",
            # system properties
            "vendor" : "Oracle Corporation",
            # system properties
            "version" : "1.8"
        },
        # system properties
        "vendor" : {
            # system properties
            "url" : {
                # system properties
                "bug" : "http://bugreport.sun.com/bugreport/"
            }
        },
        # system properties
        "version" : "1.8.0_60",
        # system properties
        "vm" : {
            # system properties
            "info" : "mixed mode",
            # system properties
            "name" : "Java HotSpot(TM) 64-Bit Server VM",
            # system properties
            "specification" : {
                # system properties
                "name" : "Java Virtual Machine Specification",
                # system properties
                "vendor" : "Oracle Corporation",
                # system properties
                "version" : "1.8"
            },
            # system properties
            "vendor" : "Oracle Corporation",
            # system properties
            "version" : "25.60-b23"
        }
    },
    # system properties
    "line" : {
        # system properties
        "separator" : "\n"
    },
    # application.conf: 1
    "myapp" : {
        # application.conf: 10
        "ask-timeout" : "15 seconds",
        # application.conf: 2
        "http" : {
            # application.conf: 3
            "host" : "0.0.0.0",
            # application.conf: 6
            "port" : 5000
        }
    },
    # system properties
    "os" : {
        # system properties
        "arch" : "x86_64",
        # system properties
        "name" : "Mac OS X",
        # system properties
        "version" : "10.11.1"
    },
    # system properties
    "path" : {
        # system properties
        "separator" : ":"
    },
    # system properties
    "socksNonProxyHosts" : "local|*.local|169.254/16|*.169.254/16",
    # reference.conf: 8
    "spray" : {
        # reference.conf: 8
        "can" : {
            # reference.conf: 189
            "client" : {
                # reference.conf: 239
                # Enables/disables an alternative request streaming mode that doesn't
                # use `Transfer-Encoding: chunked` but rather renders the individual
                # MessageChunks coming in from the application as parts of the original
                # request entity.
                # Enabling this mode causes all requests to require an explicit `Content-Length`
                # header for streaming requests.
                # Note that chunkless-streaming is implicitly enabled when streaming
                # HTTP/1.0 requests since they don't support `Transfer-Encoding: chunked`.
                "chunkless-streaming" : "off",
                # reference.conf: 254
                # The time period within which the TCP connecting process must be completed.
                # Set to `infinite` to disable.
                "connecting-timeout" : "10s",
                # reference.conf: 198
                # The time after which an idle connection will be automatically closed.
                # Set to `infinite` to completely disable idle timeouts.
                "idle-timeout" : "60 s",
                # reference.conf: 250
                # For HTTPS connections this setting specified the maximum number of
                # bytes that are encrypted in one go. Large requests are broken down in
                # chunks of this size so as to already begin sending before the request has
                # been encrypted entirely.
                "max-encryption-chunk-size" : "1m",
                # reference.conf: 320
                # The (default) configuration of the HTTP message parser for the server and
                # the client.
                # IMPORTANT: These settings (i.e. children of `spray.can.parsing`) can't be directly
                # overridden in `application.conf` to change the parser settings for client and server
                # altogether (see https://github.com/spray/spray/issues/346). Instead, override the
                # concrete settings beneath `spray.can.server.parsing` and `spray.can.client.parsing`
                # where these settings are copied to.
                "parsing" : {
                    # reference.conf: 357
                    # limits for the number of different values per header type that the
                    # header cache will hold
                    "header-cache" : {
                        # reference.conf: 359
                        "Content-MD5" : 0,
                        # reference.conf: 360
                        "Date" : 0,
                        # reference.conf: 361
                        "If-Match" : 0,
                        # reference.conf: 362
                        "If-Modified-Since" : 0,
                        # reference.conf: 363
                        "If-None-Match" : 0,
                        # reference.conf: 364
                        "If-Range" : 0,
                        # reference.conf: 365
                        "If-Unmodified-Since" : 0,
                        # reference.conf: 366
                        "User-Agent" : 32,
                        # reference.conf: 358
                        "default" : 12
                    },
                    # reference.conf: 353
                    # Enables/disables the logging of warning messages in case an incoming
                    # message (request or response) contains an HTTP header which cannot be
                    # parsed into its high-level model class due to incompatible syntax.
                    # Note that, independently of this settings, spray will accept messages
                    # with such headers as long as the message as a whole would still be legal
                    # under the HTTP specification even without this header.
                    # If a header cannot be parsed into a high-level model instance it will be
                    # provided as a `RawHeader`.
                    "illegal-header-warnings" : "on",
                    # reference.conf: 372
                    # Sets the size starting from which incoming http-messages will be delivered
                    # in chunks regardless of whether chunking is actually used on the wire.
                    # Set to infinite to disable auto chunking.
                    "incoming-auto-chunking-threshold-size" : "infinite",
                    # reference.conf: 328
                    "max-chunk-ext-length" : 256,
                    # reference.conf: 329
                    "max-chunk-size" : "1m",
                    # reference.conf: 327
                    "max-content-length" : "8m",
                    # reference.conf: 326
                    "max-header-count" : 64,
                    # reference.conf: 324
                    "max-header-name-length" : 64,
                    # reference.conf: 325
                    "max-header-value-length" : "8k",
                    # reference.conf: 323
                    "max-response-reason-length" : 64,
                    # reference.conf: 322
                    # The limits for the various parts of the HTTP message parser.
                    "max-uri-length" : "2k",
                    # reference.conf: 377
                    # Enables/disables inclusion of an SSL-Session-Info header in parsed
                    # messages over SSL transports (i.e., HttpRequest on server side and
                    # HttpResponse on client side).
                    "ssl-session-info-header" : "off",
                    # reference.conf: 343
                    # Sets the strictness mode for parsing request target URIs.
                    # The following values are defined:
                    # 
                    # `strict`: RFC3986-compliant URIs are required,
                    #     a 400 response is triggered on violations
                    # 
                    # `relaxed`: all visible 7-Bit ASCII chars are allowed
                    # 
                    # `relaxed-with-raw-query`: like `relaxed` but additionally
                    #     the URI query is not parsed, but delivered as one raw string
                    #     as the `key` value of a single Query structure element.
                    # 
                    "uri-parsing-mode" : "strict"
                },
                # reference.conf: 258
                # The proxy configurations to be used for requests with the specified
                # scheme.
                "proxy" : {
                    # reference.conf: 269
                    # Proxy settings for unencrypted HTTP requests
                    # Set to 'none' to always connect directly, 'default' to use the system
                    # settings as described in http://docs.oracle.com/javase/6/docs/technotes/guides/net/proxies.html
                    # or specify the proxy host, port and non proxy hosts as demonstrated
                    # in the following example:
                    # http {
                    #   host = myproxy.com
                    #   port = 8080
                    #   non-proxy-hosts = ["*.direct-access.net"]
                    # }
                    "http" : "default",
                    # reference.conf: 272
                    # Proxy settings for HTTPS requests (currently unsupported)
                    "https" : "default"
                },
                # reference.conf: 219
                # the "granularity" of timeout checking for both idle connections timeouts
                # as well as request timeouts, should rarely be needed to modify.
                # If set to `infinite` request and connection timeout checking is disabled.
                "reaping-cycle" : "250 ms",
                # reference.conf: 244
                # The initial size if the buffer to render the request headers in.
                # Can be used for fine-tuning request rendering performance but probably
                # doesn't have to be fiddled with in most applications.
                "request-header-size-hint" : 512,
                # reference.conf: 214
                # The max time period that a client connection will be waiting for a response
                # before triggering a request timeout. The timer for this logic is not started
                # until the connection is actually in a state to receive the response, which
                # may be quite some time after the request has been received from the
                # application!
                # There are two main reasons to delay the start of the request timeout timer:
                # 1. On the host-level API with pipelining disabled:
                #    If the request cannot be sent immediately because all connections are
                #    currently busy with earlier requests it has to be queued until a
                #    connection becomes available.
                # 2. With pipelining enabled:
                #    The request timeout timer starts only once the response for the
                #    preceding request on the connection has arrived.
                # Set to `infinite` to completely disable request timeouts.
                "request-timeout" : "20 s",
                # reference.conf: 229
                # If this setting is non-zero the HTTP client connections automatically
                # aggregate incoming response chunks into full HttpResponses before
                # dispatching them to the application.
                # If the size of the aggregated response surpasses the specified limit the
                # HTTP client connection is closed and an error returned.
                # Set to zero to disable automatic request chunk aggregation and have
                # ChunkedResponseStart, MessageChunk and ChunkedMessageEnd messages be
                # dispatched to the application.
                "response-chunk-aggregation-limit" : "1m",
                # reference.conf: 276
                # Enables more verbose DEBUG logging for debugging SSL related issues.
                "ssl-tracing" : "off",
                # reference.conf: 12-194
                # Always contains the deployed version of spray.
                # Referenced, for example, from the `spray.can.server.server-header` setting.
                "user-agent-header" : "spray-can/1.3.3"
            },
            # reference.conf: 398
            # Fully qualified config path which holds the dispatcher configuration
            # to be used for HttpServerConnection and HttpClientConnection actors.
            "connection-dispatcher" : "akka.actor.default-dispatcher",
            # reference.conf: 282
            "host-connector" : {
                # reference.conf: 189
                "client" : {
                    # reference.conf: 239
                    # Enables/disables an alternative request streaming mode that doesn't
                    # use `Transfer-Encoding: chunked` but rather renders the individual
                    # MessageChunks coming in from the application as parts of the original
                    # request entity.
                    # Enabling this mode causes all requests to require an explicit `Content-Length`
                    # header for streaming requests.
                    # Note that chunkless-streaming is implicitly enabled when streaming
                    # HTTP/1.0 requests since they don't support `Transfer-Encoding: chunked`.
                    "chunkless-streaming" : "off",
                    # reference.conf: 254
                    # The time period within which the TCP connecting process must be completed.
                    # Set to `infinite` to disable.
                    "connecting-timeout" : "10s",
                    # reference.conf: 198
                    # The time after which an idle connection will be automatically closed.
                    # Set to `infinite` to completely disable idle timeouts.
                    "idle-timeout" : "60 s",
                    # reference.conf: 250
                    # For HTTPS connections this setting specified the maximum number of
                    # bytes that are encrypted in one go. Large requests are broken down in
                    # chunks of this size so as to already begin sending before the request has
                    # been encrypted entirely.
                    "max-encryption-chunk-size" : "1m",
                    # reference.conf: 320
                    # The (default) configuration of the HTTP message parser for the server and
                    # the client.
                    # IMPORTANT: These settings (i.e. children of `spray.can.parsing`) can't be directly
                    # overridden in `application.conf` to change the parser settings for client and server
                    # altogether (see https://github.com/spray/spray/issues/346). Instead, override the
                    # concrete settings beneath `spray.can.server.parsing` and `spray.can.client.parsing`
                    # where these settings are copied to.
                    "parsing" : {
                        # reference.conf: 357
                        # limits for the number of different values per header type that the
                        # header cache will hold
                        "header-cache" : {
                            # reference.conf: 359
                            "Content-MD5" : 0,
                            # reference.conf: 360
                            "Date" : 0,
                            # reference.conf: 361
                            "If-Match" : 0,
                            # reference.conf: 362
                            "If-Modified-Since" : 0,
                            # reference.conf: 363
                            "If-None-Match" : 0,
                            # reference.conf: 364
                            "If-Range" : 0,
                            # reference.conf: 365
                            "If-Unmodified-Since" : 0,
                            # reference.conf: 366
                            "User-Agent" : 32,
                            # reference.conf: 358
                            "default" : 12
                        },
                        # reference.conf: 353
                        # Enables/disables the logging of warning messages in case an incoming
                        # message (request or response) contains an HTTP header which cannot be
                        # parsed into its high-level model class due to incompatible syntax.
                        # Note that, independently of this settings, spray will accept messages
                        # with such headers as long as the message as a whole would still be legal
                        # under the HTTP specification even without this header.
                        # If a header cannot be parsed into a high-level model instance it will be
                        # provided as a `RawHeader`.
                        "illegal-header-warnings" : "on",
                        # reference.conf: 372
                        # Sets the size starting from which incoming http-messages will be delivered
                        # in chunks regardless of whether chunking is actually used on the wire.
                        # Set to infinite to disable auto chunking.
                        "incoming-auto-chunking-threshold-size" : "infinite",
                        # reference.conf: 328
                        "max-chunk-ext-length" : 256,
                        # reference.conf: 329
                        "max-chunk-size" : "1m",
                        # reference.conf: 327
                        "max-content-length" : "8m",
                        # reference.conf: 326
                        "max-header-count" : 64,
                        # reference.conf: 324
                        "max-header-name-length" : 64,
                        # reference.conf: 325
                        "max-header-value-length" : "8k",
                        # reference.conf: 323
                        "max-response-reason-length" : 64,
                        # reference.conf: 322
                        # The limits for the various parts of the HTTP message parser.
                        "max-uri-length" : "2k",
                        # reference.conf: 377
                        # Enables/disables inclusion of an SSL-Session-Info header in parsed
                        # messages over SSL transports (i.e., HttpRequest on server side and
                        # HttpResponse on client side).
                        "ssl-session-info-header" : "off",
                        # reference.conf: 343
                        # Sets the strictness mode for parsing request target URIs.
                        # The following values are defined:
                        # 
                        # `strict`: RFC3986-compliant URIs are required,
                        #     a 400 response is triggered on violations
                        # 
                        # `relaxed`: all visible 7-Bit ASCII chars are allowed
                        # 
                        # `relaxed-with-raw-query`: like `relaxed` but additionally
                        #     the URI query is not parsed, but delivered as one raw string
                        #     as the `key` value of a single Query structure element.
                        # 
                        "uri-parsing-mode" : "strict"
                    },
                    # reference.conf: 258
                    # The proxy configurations to be used for requests with the specified
                    # scheme.
                    "proxy" : {
                        # reference.conf: 269
                        # Proxy settings for unencrypted HTTP requests
                        # Set to 'none' to always connect directly, 'default' to use the system
                        # settings as described in http://docs.oracle.com/javase/6/docs/technotes/guides/net/proxies.html
                        # or specify the proxy host, port and non proxy hosts as demonstrated
                        # in the following example:
                        # http {
                        #   host = myproxy.com
                        #   port = 8080
                        #   non-proxy-hosts = ["*.direct-access.net"]
                        # }
                        "http" : "default",
                        # reference.conf: 272
                        # Proxy settings for HTTPS requests (currently unsupported)
                        "https" : "default"
                    },
                    # reference.conf: 219
                    # the "granularity" of timeout checking for both idle connections timeouts
                    # as well as request timeouts, should rarely be needed to modify.
                    # If set to `infinite` request and connection timeout checking is disabled.
                    "reaping-cycle" : "250 ms",
                    # reference.conf: 244
                    # The initial size if the buffer to render the request headers in.
                    # Can be used for fine-tuning request rendering performance but probably
                    # doesn't have to be fiddled with in most applications.
                    "request-header-size-hint" : 512,
                    # reference.conf: 214
                    # The max time period that a client connection will be waiting for a response
                    # before triggering a request timeout. The timer for this logic is not started
                    # until the connection is actually in a state to receive the response, which
                    # may be quite some time after the request has been received from the
                    # application!
                    # There are two main reasons to delay the start of the request timeout timer:
                    # 1. On the host-level API with pipelining disabled:
                    #    If the request cannot be sent immediately because all connections are
                    #    currently busy with earlier requests it has to be queued until a
                    #    connection becomes available.
                    # 2. With pipelining enabled:
                    #    The request timeout timer starts only once the response for the
                    #    preceding request on the connection has arrived.
                    # Set to `infinite` to completely disable request timeouts.
                    "request-timeout" : "20 s",
                    # reference.conf: 229
                    # If this setting is non-zero the HTTP client connections automatically
                    # aggregate incoming response chunks into full HttpResponses before
                    # dispatching them to the application.
                    # If the size of the aggregated response surpasses the specified limit the
                    # HTTP client connection is closed and an error returned.
                    # Set to zero to disable automatic request chunk aggregation and have
                    # ChunkedResponseStart, MessageChunk and ChunkedMessageEnd messages be
                    # dispatched to the application.
                    "response-chunk-aggregation-limit" : "1m",
                    # reference.conf: 276
                    # Enables more verbose DEBUG logging for debugging SSL related issues.
                    "ssl-tracing" : "off",
                    # reference.conf: 12-194
                    # Always contains the deployed version of spray.
                    # Referenced, for example, from the `spray.can.server.server-header` setting.
                    "user-agent-header" : "spray-can/1.3.3"
                },
                # reference.conf: 307
                # The time after which an idle `HttpHostConnector` (without open
                # connections) will automatically terminate itself.
                # Set to `infinite` to completely disable idle timeouts.
                "idle-timeout" : "30 s",
                # reference.conf: 285
                # The maximum number of parallel connections that an `HttpHostConnector`
                # is allowed to establish to a host. Must be greater than zero.
                "max-connections" : 4,
                # reference.conf: 297
                # Configures redirection following.
                # If set to zero redirection responses will not be followed, i.e. they'll be returned to the user as is.
                # If set to a value > zero redirection responses will be followed up to the given number of times.
                # If the redirection chain is longer than the configured value the first redirection response that is
                # is not followed anymore is returned to the user as is.
                "max-redirects" : 0,
                # reference.conf: 290
                # The maximum number of times an `HttpHostConnector` attempts to repeat
                # failed requests (if the request can be safely retried) before
                # giving up and returning an error.
                "max-retries" : 5,
                # reference.conf: 302
                # If this setting is enabled, the `HttpHostConnector` pipelines requests
                # across connections, otherwise only one single request can be "open"
                # on a particular HTTP connection.
                "pipelining" : "off"
            },
            # reference.conf: 390
            # Fully qualified config path which holds the dispatcher configuration
            # to be used for the HttpHostConnector actors.
            "host-connector-dispatcher" : "akka.actor.default-dispatcher",
            # reference.conf: 394
            # Fully qualified config path which holds the dispatcher configuration
            # to be used for HttpListener actors.
            "listener-dispatcher" : "akka.actor.default-dispatcher",
            # reference.conf: 382
            # Fully qualified config path which holds the dispatcher configuration
            # to be used for the HttpManager.
            "manager-dispatcher" : "akka.actor.default-dispatcher",
            # reference.conf: 320
            # The (default) configuration of the HTTP message parser for the server and
            # the client.
            # IMPORTANT: These settings (i.e. children of `spray.can.parsing`) can't be directly
            # overridden in `application.conf` to change the parser settings for client and server
            # altogether (see https://github.com/spray/spray/issues/346). Instead, override the
            # concrete settings beneath `spray.can.server.parsing` and `spray.can.client.parsing`
            # where these settings are copied to.
            "parsing" : {
                # reference.conf: 357
                # limits for the number of different values per header type that the
                # header cache will hold
                "header-cache" : {
                    # reference.conf: 359
                    "Content-MD5" : 0,
                    # reference.conf: 360
                    "Date" : 0,
                    # reference.conf: 361
                    "If-Match" : 0,
                    # reference.conf: 362
                    "If-Modified-Since" : 0,
                    # reference.conf: 363
                    "If-None-Match" : 0,
                    # reference.conf: 364
                    "If-Range" : 0,
                    # reference.conf: 365
                    "If-Unmodified-Since" : 0,
                    # reference.conf: 366
                    "User-Agent" : 32,
                    # reference.conf: 358
                    "default" : 12
                },
                # reference.conf: 353
                # Enables/disables the logging of warning messages in case an incoming
                # message (request or response) contains an HTTP header which cannot be
                # parsed into its high-level model class due to incompatible syntax.
                # Note that, independently of this settings, spray will accept messages
                # with such headers as long as the message as a whole would still be legal
                # under the HTTP specification even without this header.
                # If a header cannot be parsed into a high-level model instance it will be
                # provided as a `RawHeader`.
                "illegal-header-warnings" : "on",
                # reference.conf: 372
                # Sets the size starting from which incoming http-messages will be delivered
                # in chunks regardless of whether chunking is actually used on the wire.
                # Set to infinite to disable auto chunking.
                "incoming-auto-chunking-threshold-size" : "infinite",
                # reference.conf: 328
                "max-chunk-ext-length" : 256,
                # reference.conf: 329
                "max-chunk-size" : "1m",
                # reference.conf: 327
                "max-content-length" : "8m",
                # reference.conf: 326
                "max-header-count" : 64,
                # reference.conf: 324
                "max-header-name-length" : 64,
                # reference.conf: 325
                "max-header-value-length" : "8k",
                # reference.conf: 323
                "max-response-reason-length" : 64,
                # reference.conf: 322
                # The limits for the various parts of the HTTP message parser.
                "max-uri-length" : "2k",
                # reference.conf: 377
                # Enables/disables inclusion of an SSL-Session-Info header in parsed
                # messages over SSL transports (i.e., HttpRequest on server side and
                # HttpResponse on client side).
                "ssl-session-info-header" : "off",
                # reference.conf: 343
                # Sets the strictness mode for parsing request target URIs.
                # The following values are defined:
                # 
                # `strict`: RFC3986-compliant URIs are required,
                #     a 400 response is triggered on violations
                # 
                # `relaxed`: all visible 7-Bit ASCII chars are allowed
                # 
                # `relaxed-with-raw-query`: like `relaxed` but additionally
                #     the URI query is not parsed, but delivered as one raw string
                #     as the `key` value of a single Query structure element.
                # 
                "uri-parsing-mode" : "strict"
            },
            # reference.conf: 10
            "server" : {
                # reference.conf: 168
                # Enables/disables automatic back-pressure handling by write buffering and
                # receive throttling
                "automatic-back-pressure-handling" : "on",
                # reference.conf: 170
                "back-pressure" : {
                    # reference.conf: 174
                    # The reciprocal rate of requested Acks per NoAcks. E.g. the default value
                    # '10' means that every 10th write request is acknowledged. This affects the
                    # number of writes each connection has to buffer even in absence of back-pressure.
                    "noack-rate" : 10,
                    # reference.conf: 179
                    # The lower limit the write queue size has to shrink to before reads are resumed.
                    # Use 'infinite' to disable the low-watermark so that reading is resumed instantly
                    # after the next successful write.
                    "reading-low-watermark" : "infinite"
                },
                # reference.conf: 136
                # The time period within which the TCP binding process must be completed.
                # Set to `infinite` to disable.
                "bind-timeout" : "1s",
                # reference.conf: 55
                # The period during which a service must respond to a `ChunkedRequestStart` message
                # with a `RegisterChunkHandler` message. During the registration period reading from
                # the network is suspended. It is still possible that some chunks have already been
                # received which will be buffered until the registration is received or the timeout is
                # triggered. If the timeout is triggered the connection is immediately aborted.
                "chunkhandler-registration-timeout" : "500 ms",
                # reference.conf: 98
                # Enables/disables an alternative response streaming mode that doesn't
                # use `Transfer-Encoding: chunked` but rather renders the individual
                # MessageChunks coming in from the application as parts of the original
                # response entity.
                # Enabling this mode causes all connections to be closed after a streaming
                # response has been finished since there is no other way to signal the
                # response end to the client.
                # Note that chunkless-streaming is implicitly enabled when streaming
                # responses to HTTP/1.0 clients (since they don't support
                # `Transfer-Encoding: chunked`)
                "chunkless-streaming" : "off",
                # reference.conf: 164
                # If this setting is empty the server only accepts requests that carry a
                # non-empty `Host` header. Otherwise it responds with `400 Bad Request`.
                # Set to a non-empty value to be used in lieu of a missing or empty `Host`
                # header to make the server accept such requests.
                # Note that the server will never accept HTTP/1.1 request without a `Host`
                # header, i.e. this setting only affects HTTP/1.1 requests with an empty
                # `Host` header as well as HTTP/1.0 requests.
                # Examples: `www.spray.io` or `example.com:8080`
                "default-host-header" : "",
                # reference.conf: 37
                # The time after which an idle connection will be automatically closed.
                # Set to `infinite` to completely disable idle connection timeouts.
                "idle-timeout" : "60 s",
                # reference.conf: 132
                # For HTTPS connections this setting specified the maximum number of
                # bytes that are encrypted in one go. Large responses are broken down in
                # chunks of this size so as to already begin sending before the response has
                # been encrypted entirely.
                "max-encryption-chunk-size" : "1m",
                # reference.conf: 320
                # The (default) configuration of the HTTP message parser for the server and
                # the client.
                # IMPORTANT: These settings (i.e. children of `spray.can.parsing`) can't be directly
                # overridden in `application.conf` to change the parser settings for client and server
                # altogether (see https://github.com/spray/spray/issues/346). Instead, override the
                # concrete settings beneath `spray.can.server.parsing` and `spray.can.client.parsing`
                # where these settings are copied to.
                "parsing" : {
                    # reference.conf: 357
                    # limits for the number of different values per header type that the
                    # header cache will hold
                    "header-cache" : {
                        # reference.conf: 359
                        "Content-MD5" : 0,
                        # reference.conf: 360
                        "Date" : 0,
                        # reference.conf: 361
                        "If-Match" : 0,
                        # reference.conf: 362
                        "If-Modified-Since" : 0,
                        # reference.conf: 363
                        "If-None-Match" : 0,
                        # reference.conf: 364
                        "If-Range" : 0,
                        # reference.conf: 365
                        "If-Unmodified-Since" : 0,
                        # reference.conf: 366
                        "User-Agent" : 32,
                        # reference.conf: 358
                        "default" : 12
                    },
                    # reference.conf: 353
                    # Enables/disables the logging of warning messages in case an incoming
                    # message (request or response) contains an HTTP header which cannot be
                    # parsed into its high-level model class due to incompatible syntax.
                    # Note that, independently of this settings, spray will accept messages
                    # with such headers as long as the message as a whole would still be legal
                    # under the HTTP specification even without this header.
                    # If a header cannot be parsed into a high-level model instance it will be
                    # provided as a `RawHeader`.
                    "illegal-header-warnings" : "on",
                    # reference.conf: 372
                    # Sets the size starting from which incoming http-messages will be delivered
                    # in chunks regardless of whether chunking is actually used on the wire.
                    # Set to infinite to disable auto chunking.
                    "incoming-auto-chunking-threshold-size" : "infinite",
                    # reference.conf: 328
                    "max-chunk-ext-length" : 256,
                    # reference.conf: 329
                    "max-chunk-size" : "1m",
                    # reference.conf: 327
                    "max-content-length" : "8m",
                    # reference.conf: 326
                    "max-header-count" : 64,
                    # reference.conf: 324
                    "max-header-name-length" : 64,
                    # reference.conf: 325
                    "max-header-value-length" : "8k",
                    # reference.conf: 323
                    "max-response-reason-length" : 64,
                    # reference.conf: 322
                    # The limits for the various parts of the HTTP message parser.
                    "max-uri-length" : "2k",
                    # reference.conf: 377
                    # Enables/disables inclusion of an SSL-Session-Info header in parsed
                    # messages over SSL transports (i.e., HttpRequest on server side and
                    # HttpResponse on client side).
                    "ssl-session-info-header" : "off",
                    # reference.conf: 343
                    # Sets the strictness mode for parsing request target URIs.
                    # The following values are defined:
                    # 
                    # `strict`: RFC3986-compliant URIs are required,
                    #     a 400 response is triggered on violations
                    # 
                    # `relaxed`: all visible 7-Bit ASCII chars are allowed
                    # 
                    # `relaxed-with-raw-query`: like `relaxed` but additionally
                    #     the URI query is not parsed, but delivered as one raw string
                    #     as the `key` value of a single Query structure element.
                    # 
                    "uri-parsing-mode" : "strict"
                },
                # reference.conf: 154
                # The time after which a connection is aborted (RST) after a parsing error
                # occurred. The timeout prevents a connection which is already known to be
                # erroneous from receiving evermore data even if all of the data will be ignored.
                # However, in case of a connection abortion the client usually doesn't properly
                # receive the error response. This timeout is a trade-off which allows the client
                # some time to finish its request and receive a proper error response before the
                # connection is forcibly closed to free resources.
                "parsing-error-abort-timeout" : "2s",
                # reference.conf: 33
                # The maximum number of requests that are accepted (and dispatched to
                # the application) on one single connection before the first request
                # has to be completed.
                # Incoming requests that would cause the pipelining limit to be exceeded
                # are not read from the connections socket so as to build up "back-pressure"
                # to the client via TCP flow control.
                # A setting of 1 disables HTTP pipelining, since only one request per
                # connection can be "open" (i.e. being processed by the application) at any
                # time. Set to higher values to enable HTTP pipelining.
                # Set to 'disabled' for completely disabling pipelining limits
                # (not recommended on public-facing servers due to risk of DoS attacks).
                # This value must be > 0 and <= 128.
                "pipelining-limit" : 1,
                # reference.conf: 78
                # Enables/disables the addition of a `Raw-Request-URI` header holding the
                # original raw request URI as the client has sent it.
                "raw-request-uri-header" : "off",
                # reference.conf: 65
                # The "granularity" of timeout checking for both idle connections timeouts
                # as well as request timeouts, should rarely be needed to modify.
                # If set to `infinite` request and connection timeout checking is disabled.
                "reaping-cycle" : "250 ms",
                # reference.conf: 145
                # The time period within which a connection handler must have been
                # registered after the bind handler has received a `Connected` event.
                # Set to `infinite` to disable.
                "registration-timeout" : "1s",
                # reference.conf: 74
                # Enables/disables the addition of a `Remote-Address` header
                # holding the clients (remote) IP address.
                "remote-address-header" : "off",
                # reference.conf: 121
                # If this setting is non-zero the HTTP server automatically aggregates
                # incoming request chunks into full HttpRequests before dispatching them to
                # the application. If the size of the aggregated requests surpasses the
                # specified limit the server responds with a `413 Request Entity Too Large`
                # error response before closing the connection.
                # Set to zero to disable automatic request chunk aggregation and have
                # ChunkedRequestStart, MessageChunk and ChunkedMessageEnd messages be
                # dispatched to the handler.
                "request-chunk-aggregation-limit" : "1m",
                # reference.conf: 42
                # If a request hasn't been responded to after the time period set here
                # a `spray.http.Timedout` message will be sent to the timeout handler.
                # Set to `infinite` to completely disable request timeouts.
                "request-timeout" : "20 s",
                # reference.conf: 126
                # The initial size if the buffer to render the response headers in.
                # Can be used for fine-tuning response rendering performance but probably
                # doesn't have to be fiddled with in most applications.
                "response-header-size-hint" : 512,
                # reference.conf: 12-13
                # Always contains the deployed version of spray.
                # Referenced, for example, from the `spray.can.server.server-header` setting.
                "server-header" : "spray-can/1.3.3",
                # reference.conf: 19
                # Enables/disables SSL encryption.
                # If enabled the server uses the implicit `ServerSSLEngineProvider` member
                # of the `Bind` command to create `SSLEngine` instances for the underlying
                # IO connection.
                "ssl-encryption" : "off",
                # reference.conf: 183
                # Enables more verbose DEBUG logging for debugging SSL related issues.
                "ssl-tracing" : "off",
                # reference.conf: 70
                # Enables/disables support for statistics collection and querying.
                # Even though stats keeping overhead is small,
                # for maximum performance switch off when not needed.
                "stats-support" : "on",
                # reference.conf: 60
                # The path of the actor to send `spray.http.Timedout` messages to.
                # If empty all `Timedout` messages will go to the "regular" request
                # handling actor.
                "timeout-handler" : "",
                # reference.conf: 48
                # After a `Timedout` message has been sent to the timeout handler and the
                # request still hasn't been completed after the time period set here
                # the server will complete the request itself with an error response.
                # Set to `infinite` to disable timeout timeouts.
                "timeout-timeout" : "2 s",
                # reference.conf: 86
                # Enables/disables automatic handling of HEAD requests.
                # If this setting is enabled the server dispatches HEAD requests as GET
                # requests to the application and automatically strips off all message
                # bodies from outgoing responses.
                # Note that, even when this setting is off the server will never send
                # out message bodies on responses to HEAD requests.
                "transparent-head-requests" : "on",
                # reference.conf: 140
                # The time period within which the TCP unbinding process must be completed.
                # Set to `infinite` to disable.
                "unbind-timeout" : "1s",
                # reference.conf: 111
                # Enables/disables the logging of the full (potentially multiple line)
                # error message to the server logs.
                # If disabled only a single line will be logged.
                "verbose-error-logging" : "off",
                # reference.conf: 106
                # Enables/disables the returning of more detailed error messages to
                # the client in the error response.
                # Should be disabled for browser-facing APIs due to the risk of XSS attacks
                # and (probably) enabled for internal or non-browser APIs.
                # Note that spray will always produce log messages containing the full
                # error details.
                "verbose-error-messages" : "off"
            },
            # reference.conf: 386
            # Fully qualified config path which holds the dispatcher configuration
            # to be used for the HttpClientSettingsGroup actors.
            "settings-group-dispatcher" : "akka.actor.default-dispatcher"
        },
        # reference.conf: 8
        "routing" : {
            # reference.conf: 22
            # the size of an individual chunk when streaming file content
            "file-chunking-chunk-size" : "128k",
            # reference.conf: 19
            # the minimal file size triggering file content streaming
            # set to zero to disable automatic file-chunking in the FileAndResourceDirectives
            "file-chunking-threshold-size" : "128k",
            # reference.conf: 25
            # Enables/disables ETag and `If-Modified-Since` support for FileAndResourceDirectives
            "file-get-conditional" : "on",
            # reference.conf: 38
            # the maximum size between two requested ranges.
            # Ranges with less space in between will be coalesced.
            "range-coalescing-threshold" : 80,
            # reference.conf: 42
            # the maximum number of allowed ranges per request.
            # Requests with more ranges will be rejected due to DOS suspicion.
            "range-count-limit" : 16,
            # reference.conf: 28
            # Enables/disables the rendering of the "rendered by" footer in directory listings
            "render-vanity-footer" : "yes",
            # reference.conf: 32
            # a config section holding plain-text user/password entries
            # for the default FromConfigUserPassAuthenticator
            "users" : {},
            # reference.conf: 15
            # Enables/disables the returning of more detailed error messages to the
            # client in the error response
            # Should be disabled for browser-facing APIs due to the risk of XSS attacks
            # and (probably) enabled for internal or non-browser APIs
            # (Note that spray will always produce log messages containing the full error details)
            "verbose-error-messages" : "off"
        },
        # reference.conf: 12
        # Always contains the deployed version of spray.
        # Referenced, for example, from the `spray.can.server.server-header` setting.
        "version" : "1.3.3"
    },
    # system properties
    "sun" : {
        # system properties
        "arch" : {
            # system properties
            "data" : {
                # system properties
                "model" : "64"
            }
        },
        # system properties
        "boot" : {
            # system properties
            "class" : {
                # system properties
                "path" : "/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes"
            },
            # system properties
            "library" : {
                # system properties
                "path" : "/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib"
            }
        },
        # system properties
        "cpu" : {
            # system properties
            "endian" : "little",
            # system properties
            "isalist" : ""
        },
        # system properties
        "io" : {
            # system properties
            "unicode" : {
                # system properties
                "encoding" : "UnicodeBig"
            }
        },
        # system properties
        "java" : {
            # system properties
            "command" : "com.intellij.rt.execution.application.AppMain TransformerMain",
            # system properties
            "launcher" : "SUN_STANDARD"
        },
        # system properties
        "jnu" : {
            # system properties
            "encoding" : "UTF-8"
        },
        # system properties
        "management" : {
            # system properties
            "compiler" : "HotSpot 64-Bit Tiered Compilers"
        },
        # system properties
        "os" : {
            # system properties
            "patch" : {
                # system properties
                "level" : "unknown"
            }
        }
    },
    # system properties
    "user" : {
        # system properties
        "country" : "US",
        # system properties
        "dir" : "/Users/jcohen66/src/scala/Transformer",
        # system properties
        "home" : "/Users/jcohen66",
        # system properties
        "language" : "en",
        # system properties
        "name" : "jcohen66",
        # system properties
        "timezone" : ""
    }
}

[INFO] [2015-11-21 12:30:48,810] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: reading file: /Users/jcohen66/src/scala/Transformer/test_csv.txt
[INFO] [2015-11-21 12:30:48,816] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: Read: Client(1, John, Doe) from file
[INFO] [2015-11-21 12:30:48,816] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: Read: Client(2, Jane, Smith) from file
[INFO] [2015-11-21 12:30:48,816] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: Read: Client(3, Tom, Jones) from file
[INFO] [2015-11-21 12:30:48,816] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: Read: Client(4, Edna, Post) from file
[INFO] [2015-11-21 12:30:48,817] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: Read: Client(5, Polly, Draper) from file
[INFO] [2015-11-21 12:30:48,817] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: Read: Client(6, Bob, Smith) from file
[INFO] [2015-11-21 12:30:48,817] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: Read: Client(7, Wally, Abdo) from file
[INFO] [2015-11-21 12:30:48,817] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: Read: Client(8, Walter, White) from file
[INFO] [2015-11-21 12:30:48,818] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: Read: Client(9, Andrew, Colt) from file
[INFO] [2015-11-21 12:30:48,818] [transformer-akka.actor.default-dispatcher-20] a.FileReaderActor: Read: Client(10, Boyd, Madsen) from file
[INFO] [2015-11-21 12:30:48,819] [transformer-akka.actor.default-dispatcher-20] a.SupervisorActor: received Client: Client(1, John, Doe)
[INFO] [2015-11-21 12:30:49,026] [transformer-akka.actor.default-dispatcher-20] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/1.json
[INFO] [2015-11-21 12:30:49,027] [transformer-akka.actor.default-dispatcher-20] a.SupervisorActor: received Client: Client(2, Jane, Smith)
[INFO] [2015-11-21 12:30:49,027] [transformer-akka.actor.default-dispatcher-20] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/1.json from file consisting of 46 bytes
[INFO] [2015-11-21 12:30:49,029] [transformer-akka.actor.default-dispatcher-20] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/2.json
[INFO] [2015-11-21 12:30:49,029] [transformer-akka.actor.default-dispatcher-20] a.SupervisorActor: received Client: Client(3, Tom, Jones)
[INFO] [2015-11-21 12:30:49,029] [transformer-akka.actor.default-dispatcher-20] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/2.json from file consisting of 48 bytes
[INFO] [2015-11-21 12:30:49,032] [transformer-akka.actor.default-dispatcher-20] a.SupervisorActor: received Client: Client(4, Edna, Post)
[INFO] [2015-11-21 12:30:49,032] [transformer-akka.actor.default-dispatcher-20] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/3.json
[INFO] [2015-11-21 12:30:49,032] [transformer-akka.actor.default-dispatcher-20] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/3.json from file consisting of 47 bytes
[INFO] [2015-11-21 12:30:49,034] [transformer-akka.actor.default-dispatcher-20] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/4.json
[INFO] [2015-11-21 12:30:49,034] [transformer-akka.actor.default-dispatcher-20] a.SupervisorActor: received Client: Client(5, Polly, Draper)
[INFO] [2015-11-21 12:30:49,034] [transformer-akka.actor.default-dispatcher-20] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/4.json from file consisting of 47 bytes
[INFO] [2015-11-21 12:30:49,036] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/5.json
[INFO] [2015-11-21 12:30:49,036] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: received Client: Client(6, Bob, Smith)
[INFO] [2015-11-21 12:30:49,037] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/5.json from file consisting of 50 bytes
[INFO] [2015-11-21 12:30:49,039] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/6.json
[INFO] [2015-11-21 12:30:49,039] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: received Client: Client(7, Wally, Abdo)
[INFO] [2015-11-21 12:30:49,039] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/6.json from file consisting of 47 bytes
[INFO] [2015-11-21 12:30:49,041] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: received Client: Client(8, Walter, White)
[INFO] [2015-11-21 12:30:49,041] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/7.json
[INFO] [2015-11-21 12:30:49,041] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/7.json from file consisting of 48 bytes
[INFO] [2015-11-21 12:30:49,043] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: received Client: Client(9, Andrew, Colt)
[INFO] [2015-11-21 12:30:49,043] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/8.json
[INFO] [2015-11-21 12:30:49,043] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/8.json from file consisting of 50 bytes
[INFO] [2015-11-21 12:30:49,045] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: received Client: Client(10, Boyd, Madsen)
[INFO] [2015-11-21 12:30:49,045] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/9.json
[INFO] [2015-11-21 12:30:49,045] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/9.json from file consisting of 49 bytes
[INFO] [2015-11-21 12:30:49,047] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/10.json
[INFO] [2015-11-21 12:30:49,047] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:30:49,047] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:30:49,048] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:30:49,048] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:30:49,048] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:30:49,048] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:30:49,048] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:30:49,048] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:30:49,048] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:30:49,048] [transformer-akka.actor.default-dispatcher-13] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/10.json from file consisting of 50 bytes
[INFO] [2015-11-21 12:30:49,049] [transformer-akka.actor.default-dispatcher-13] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:32:43,137] [transformer-akka.actor.default-dispatcher-4] a.e.s.Slf4jLogger: Slf4jLogger started
[INFO] [2015-11-21 12:32:43,166] [transformer-akka.actor.default-dispatcher-3] a.a.ActorSystemImpl: {
    # merge of application.conf: 14,reference.conf: 8
    "akka" : {
        # merge of application.conf: 21,reference.conf: 62
        "actor" : {
            # reference.conf: 74
            # Timeout for ActorSystem.actorOf
            "creation-timeout" : "20s",
            # application.conf: 22
            "debug" : {
                # application.conf: 24
                "autoreceive" : "on",
                # application.conf: 27
                "event-stream" : "on",
                # application.conf: 26
                "fsm" : "on",
                # application.conf: 25
                "lifecycle" : "on",
                # application.conf: 23
                "receive" : "on",
                # application.conf: 29
                "router-misconfiguration" : "on",
                # application.conf: 28
                "unhandled" : "on"
            },
            # reference.conf: 238
            "default-dispatcher" : {
                # reference.conf: 334
                # For BalancingDispatcher: If the balancing dispatcher should attempt to
                # schedule idle actors using the same dispatcher when a message comes in,
                # and the dispatchers ExecutorService is not fully busy already.
                "attempt-teamwork" : "on",
                # reference.conf: 263
                # This will be used if you have set "executor = "default-executor"".
                # If an ActorSystem is created with a given ExecutionContext, this
                # ExecutionContext will be used as the default executor for all
                # dispatchers in the ActorSystem configured with
                # executor = "default-executor". Note that "default-executor"
                # is the default value for executor, and therefore used if not
                # specified otherwise. If no ExecutionContext is given,
                # the executor configured in "fallback" will be used.
                "default-executor" : {
                    # reference.conf: 264
                    "fallback" : "fork-join-executor"
                },
                # reference.conf: 253
                # Which kind of ExecutorService to use for this dispatcher
                # Valid options:
                #  - "default-executor" requires a "default-executor" section
                #  - "fork-join-executor" requires a "fork-join-executor" section
                #  - "thread-pool-executor" requires a "thread-pool-executor" section
                #  - A FQCN of a class extending ExecutorServiceConfigurator
                "executor" : "default-executor",
                # reference.conf: 268
                # This will be used if you have set "executor = "fork-join-executor""
                "fork-join-executor" : {
                    # reference.conf: 275
                    # The parallelism factor is used to determine thread pool size using the
                    # following formula: ceil(available processors * factor). Resulting size
                    # is then bounded by the parallelism-min and parallelism-max values.
                    "parallelism-factor" : 3,
                    # reference.conf: 278
                    # Max number of threads to cap factor-based parallelism number to
                    "parallelism-max" : 64,
                    # reference.conf: 270
                    # Min number of threads to cap factor-based parallelism number to
                    "parallelism-min" : 8
                },
                # reference.conf: 339
                # If this dispatcher requires a specific type of mailbox, specify the
                # fully-qualified class name here; the actually created mailbox will
                # be a subtype of this type. The empty string signifies no requirement.
                "mailbox-requirement" : "",
                # reference.conf: 322
                # How long time the dispatcher will wait for new actors until it shuts down
                "shutdown-timeout" : "1s",
                # reference.conf: 282
                # This will be used if you have set "executor = "thread-pool-executor""
                "thread-pool-executor" : {
                    # reference.conf: 318
                    # Allow core threads to time out
                    "allow-core-timeout" : "on",
                    # reference.conf: 293
                    # The core pool size factor is used to determine thread pool core size
                    # using the following formula: ceil(available processors * factor).
                    # Resulting size is then bounded by the core-pool-size-min and
                    # core-pool-size-max values.
                    "core-pool-size-factor" : 3,
                    # reference.conf: 296
                    # Max number of threads to cap factor-based number to
                    "core-pool-size-max" : 64,
                    # reference.conf: 287
                    # Min number of threads to cap factor-based core number to
                    "core-pool-size-min" : 8,
                    # reference.conf: 284
                    # Keep alive time for threads
                    "keep-alive-time" : "60s",
                    # reference.conf: 304
                    # Max no of threads (if using a bounded task queue) is determined by
                    # calculating: ceil(available processors * factor)
                    "max-pool-size-factor" : 3,
                    # reference.conf: 308
                    # Max number of threads to cap factor-based max number to
                    # (if using a  bounded task queue)
                    "max-pool-size-max" : 64,
                    # reference.conf: 300
                    # Minimum number of threads to cap factor-based max number to
                    # (if using a bounded task queue)
                    "max-pool-size-min" : 8,
                    # reference.conf: 311
                    # Specifies the bounded capacity of the task queue (< 1 == unbounded)
                    "task-queue-size" : -1,
                    # reference.conf: 315
                    # Specifies which type of task queue will be used, can be "array" or
                    # "linked" (default)
                    "task-queue-type" : "linked"
                },
                # reference.conf: 326
                # Throughput defines the number of messages that are processed in a batch
                # before the thread is returned to the pool. Set to 1 for as fair as possible.
                "throughput" : 5,
                # reference.conf: 329
                # Throughput deadline for Dispatcher, set to 0 or negative for no deadline
                "throughput-deadline-time" : "0ms",
                # reference.conf: 245
                # Must be one of the following
                # Dispatcher, PinnedDispatcher, or a FQCN to a class inheriting
                # MessageDispatcherConfigurator with a public constructor with
                # both com.typesafe.config.Config parameter and
                # akka.dispatch.DispatcherPrerequisites parameters.
                # PinnedDispatcher must be used together with executor=thread-pool-executor.
                "type" : "Dispatcher"
            },
            # reference.conf: 342
            "default-mailbox" : {
                # reference.conf: 353
                # If the mailbox is bounded then it uses this setting to determine its
                # capacity. The provided value must be positive.
                # NOTICE:
                # Up to version 2.1 the mailbox type was determined based on this setting;
                # this is no longer the case, the type must explicitly be a bounded mailbox.
                "mailbox-capacity" : 1000,
                # reference.conf: 358
                # If the mailbox is bounded then this is the timeout for enqueueing
                # in case the mailbox is full. Negative values signify infinite
                # timeout, which should be avoided as it bears the risk of dead-lock.
                "mailbox-push-timeout-time" : "10s",
                # reference.conf: 346
                # FQCN of the MailboxType. The Class of the FQCN must have a public
                # constructor with
                # (akka.actor.ActorSystem.Settings, com.typesafe.config.Config) parameters.
                "mailbox-type" : "akka.dispatch.UnboundedMailbox",
                # reference.conf: 364
                # For Actor with Stash: The default capacity of the stash.
                # If negative (or zero) then an unbounded stash is used (default)
                # If positive then a bounded stash is used and the capacity is set using
                # the property
                "stash-capacity" : -1
            },
            # reference.conf: 118
            "deployment" : {
                # reference.conf: 121
                # deployment id pattern - on the format: /parent/child etc.
                "default" : {
                    # reference.conf: 127
                    # The id of the dispatcher to use for this actor.
                    # If undefined or empty the dispatcher specified in code
                    # (Props.withDispatcher) is used, or default-dispatcher if not
                    # specified at all.
                    "dispatcher" : "",
                    # reference.conf: 135
                    # The id of the mailbox to use for this actor.
                    # If undefined or empty the default mailbox of the configured dispatcher
                    # is used or if there is no mailbox configuration the mailbox specified
                    # in code (Props.withMailbox) is used.
                    # If there is a mailbox defined in the configured dispatcher then that
                    # overrides this setting.
                    "mailbox" : "",
                    # reference.conf: 160
                    # number of children to create in case of a router;
                    # this setting is ignored if routees.paths is given
                    "nr-of-instances" : 1,
                    # reference.conf: 191
                    # Routers with dynamically resizable number of routees; this feature is
                    # enabled by including (parts of) this section in the deployment
                    "resizer" : {
                        # reference.conf: 229
                        # Fraction of routees to be removed when the resizer reaches the
                        # backoffThreshold.
                        # For example, 0.1 would decrease 10% (rounded up), i.e. if current
                        # capacity is 9 it will request an decrease of 1 routee.
                        "backoff-rate" : 0.1,
                        # reference.conf: 223
                        # Minimum fraction of busy routees before backing off.
                        # For example, if this is 0.3, then we'll remove some routees only when
                        # less than 30% of routees are busy, i.e. if current capacity is 10 and
                        # 3 are busy then the capacity is unchanged, but if 2 or less are busy
                        # the capacity is decreased.
                        # Use 0.0 or negative to avoid removal of routees.
                        "backoff-threshold" : 0.3,
                        # reference.conf: 193
                        "enabled" : "off",
                        # reference.conf: 196
                        # The fewest number of routees the router should ever have.
                        "lower-bound" : 1,
                        # reference.conf: 233
                        # Number of messages between resize operation.
                        # Use 1 to resize before each message.
                        "messages-per-resize" : 10,
                        # reference.conf: 210
                        # Threshold used to evaluate if a routee is considered to be busy
                        # (under pressure). Implementation depends on this value (default is 1).
                        # 0:   number of routees currently processing a message.
                        # 1:   number of routees currently processing a message has
                        #      some messages in mailbox.
                        # > 1: number of routees with at least the configured pressure-threshold
                        #      messages in their mailbox. Note that estimating mailbox size of
                        #      default UnboundedMailbox is O(N) operation.
                        "pressure-threshold" : 1,
                        # reference.conf: 215
                        # Percentage to increase capacity whenever all routees are busy.
                        # For example, 0.2 would increase 20% (rounded up), i.e. if current
                        # capacity is 6 it will request an increase of 2 more routees.
                        "rampup-rate" : 0.2,
                        # reference.conf: 200
                        # The most number of routees the router should ever have.
                        # Must be greater than or equal to lower-bound.
                        "upper-bound" : 10
                    },
                    # reference.conf: 173
                    "routees" : {
                        # reference.conf: 177
                        # Alternatively to giving nr-of-instances you can specify the full
                        # paths of those actors which should be routed to. This setting takes
                        # precedence over nr-of-instances
                        "paths" : []
                    },
                    # reference.conf: 156
                    # routing (load-balance) scheme to use
                    # - available: "from-code", "round-robin", "random", "smallest-mailbox",
                    #              "scatter-gather", "broadcast"
                    # - or:        Fully qualified class name of the router class.
                    #              The class must extend akka.routing.CustomRouterConfig and
                    #              have a public constructor with com.typesafe.config.Config
                    #              and optional akka.actor.DynamicAccess parameter.
                    # - default is "from-code";
                    # Whether or not an actor is transformed to a Router is decided in code
                    # only (Props.withRouter). The type of router can be overridden in the
                    # configuration; specifying "from-code" means that the values specified
                    # in the code shall be used.
                    # In case of routing, the actors to be routed to can be specified
                    # in several ways:
                    # - nr-of-instances: will create that many children
                    # - routees.paths: will route messages to these paths using ActorSelection,
                    #   i.e. will not create children
                    # - resizer: dynamically resizable number of routees as specified in
                    #   resizer below
                    "router" : "from-code",
                    # reference.conf: 168
                    "tail-chopping-router" : {
                        # reference.conf: 170
                        # interval is duration between sending message to next routee
                        "interval" : "10 milliseconds"
                    },
                    # reference.conf: 166
                    # number of virtual nodes per node for consistent-hashing router
                    "virtual-nodes-factor" : 10,
                    # reference.conf: 163
                    # within is the timeout used for routers containing future calls
                    "within" : "5 seconds"
                }
            },
            # reference.conf: 462
            # Configuration items which are used by the akka.actor.ActorDSL._ methods
            "dsl" : {
                # reference.conf: 468
                # Default timeout to assume for operations like Inbox.receive et al
                "default-timeout" : "5s",
                # reference.conf: 465
                # Maximum queue size of the actor created by newInbox(); this protects
                # against faulty programs which use select() and consistently miss messages
                "inbox-size" : 1000
            },
            # reference.conf: 71
            # The guardian "/user" will use this class to obtain its supervisorStrategy.
            # It needs to be a subclass of akka.actor.SupervisorStrategyConfigurator.
            # In addition to the default there is akka.actor.StoppingSupervisorStrategy.
            "guardian-supervisor-strategy" : "akka.actor.DefaultSupervisorStrategy",
            # reference.conf: 367
            "mailbox" : {
                # reference.conf: 410
                "bounded-deque-based" : {
                    # reference.conf: 414
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.BoundedDequeBasedMailbox"
                },
                # reference.conf: 396
                "bounded-queue-based" : {
                    # reference.conf: 400
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.BoundedMailbox"
                },
                # reference.conf: 374
                # Mapping between message queue semantics and mailbox configurations.
                # Used by akka.dispatch.RequiresMessageQueue[T] to enforce different
                # mailbox types on actors.
                # If your Actor implements RequiresMessageQueue[T], then when you create
                # an instance of that actor its mailbox type will be decided by looking
                # up a mailbox configuration via T in this mapping
                "requirements" : {
                    # reference.conf: 384
                    "akka.dispatch.BoundedDequeBasedMessageQueueSemantics" : "akka.actor.mailbox.bounded-deque-based",
                    # reference.conf: 378
                    "akka.dispatch.BoundedMessageQueueSemantics" : "akka.actor.mailbox.bounded-queue-based",
                    # reference.conf: 380
                    "akka.dispatch.DequeBasedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-deque-based",
                    # reference.conf: 386
                    "akka.dispatch.MultipleConsumerSemantics" : "akka.actor.mailbox.unbounded-queue-based",
                    # reference.conf: 382
                    "akka.dispatch.UnboundedDequeBasedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-deque-based",
                    # reference.conf: 376
                    "akka.dispatch.UnboundedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-queue-based"
                },
                # reference.conf: 403
                "unbounded-deque-based" : {
                    # reference.conf: 407
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.UnboundedDequeBasedMailbox"
                },
                # reference.conf: 389
                "unbounded-queue-based" : {
                    # reference.conf: 393
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.UnboundedMailbox"
                }
            },
            # reference.conf: 66
            # FQCN of the ActorRefProvider to be used; the below is the built-in default,
            # another one is akka.remote.RemoteActorRefProvider in the akka-remote bundle.
            "provider" : "akka.actor.LocalActorRefProvider",
            # reference.conf: 78
            # Frequency with which stopping actors are prodded in case they had to be
            # removed from their parents
            "reaper-interval" : "5s",
            # reference.conf: 100
            "router" : {
                # reference.conf: 100
                # Mapping between ´deployment.router' short names to fully qualified class names
                "type-mapping" : {
                    # reference.conf: 106
                    "balancing-pool" : "akka.routing.BalancingPool",
                    # reference.conf: 109
                    "broadcast-group" : "akka.routing.BroadcastGroup",
                    # reference.conf: 108
                    "broadcast-pool" : "akka.routing.BroadcastPool",
                    # reference.conf: 115
                    "consistent-hashing-group" : "akka.routing.ConsistentHashingGroup",
                    # reference.conf: 114
                    "consistent-hashing-pool" : "akka.routing.ConsistentHashingPool",
                    # reference.conf: 101
                    "from-code" : "akka.routing.NoRouter",
                    # reference.conf: 105
                    "random-group" : "akka.routing.RandomGroup",
                    # reference.conf: 104
                    "random-pool" : "akka.routing.RandomPool",
                    # reference.conf: 103
                    "round-robin-group" : "akka.routing.RoundRobinGroup",
                    # reference.conf: 102
                    "round-robin-pool" : "akka.routing.RoundRobinPool",
                    # reference.conf: 111
                    "scatter-gather-group" : "akka.routing.ScatterGatherFirstCompletedGroup",
                    # reference.conf: 110
                    "scatter-gather-pool" : "akka.routing.ScatterGatherFirstCompletedPool",
                    # reference.conf: 107
                    "smallest-mailbox-pool" : "akka.routing.SmallestMailboxPool",
                    # reference.conf: 113
                    "tail-chopping-group" : "akka.routing.TailChoppingGroup",
                    # reference.conf: 112
                    "tail-chopping-pool" : "akka.routing.TailChoppingPool"
                }
            },
            # reference.conf: 456
            # Class to Serializer binding. You only need to specify the name of an
            # interface or abstract base class of the messages. In case of ambiguity it
            # is using the most specific configured class, or giving a warning and
            # choosing the “first” one.
            # 
            # To disable one of the default serializers, assign its class to "none", like
            # "java.io.Serializable" = none
            "serialization-bindings" : {
                # reference.conf: 457
                "[B" : "bytes",
                # reference.conf: 458
                "java.io.Serializable" : "java"
            },
            # reference.conf: 87
            # Serializes and deserializes creators (in Props) to ensure that they can be
            # sent over the network, this is only intended for testing. Purely local deployments
            # as marked with deploy.scope == LocalScope are exempt from verification.
            "serialize-creators" : "off",
            # reference.conf: 82
            # Serializes and deserializes (non-primitive) messages to ensure immutability,
            # this is only intended for testing.
            "serialize-messages" : "off",
            # reference.conf: 444
            # Entries for pluggable serializers and their bindings.
            "serializers" : {
                # reference.conf: 446
                "bytes" : "akka.serialization.ByteArraySerializer",
                # reference.conf: 445
                "java" : "akka.serialization.JavaSerializer"
            },
            # reference.conf: 94
            "typed" : {
                # reference.conf: 96
                # Default timeout for typed actor methods with non-void return type
                "timeout" : "5s"
            },
            # reference.conf: 92
            # Timeout for send operations to top-level actors which are in the process
            # of being started. This is only relevant if using a bounded mailbox or the
            # CallingThreadDispatcher for a top-level actor.
            "unstarted-push-timeout" : "10s"
        },
        # reference.conf: 56
        # Toggles whether threads created by this ActorSystem should be daemons or not
        "daemonic" : "off",
        # reference.conf: 53
        # List FQCN of extensions which shall be loaded at actor system startup.
        # Should be on the format: 'extensions = ["foo", "bar"]' etc.
        # See the Akka Documentation for more info about Extensions
        "extensions" : [],
        # reference.conf: 13
        # Home directory of Akka, modules in the deploy directory will be loaded
        "home" : "",
        # reference.conf: 511
        "io" : {
            # reference.conf: 515
            # By default the select loops run on dedicated threads, hence using a
            # PinnedDispatcher
            "pinned-dispatcher" : {
                # reference.conf: 517
                "executor" : "thread-pool-executor",
                # reference.conf: 518
                "thread-pool-executor" : {
                    # reference.conf: 518
                    "allow-core-pool-timeout" : "off"
                },
                # reference.conf: 516
                "type" : "PinnedDispatcher"
            },
            # reference.conf: 521
            "tcp" : {
                # reference.conf: 543
                # The maximum number of connection that are accepted in one go,
                # higher numbers decrease latency, lower numbers increase fairness on
                # the worker-dispatcher
                "batch-accept-limit" : 10,
                # reference.conf: 551
                # The maximal number of direct buffers kept in the direct buffer pool for
                # reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf: 547
                # The number of bytes per direct buffer in the pool used to read or write
                # network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf: 581
                # Fully qualified config path which holds the dispatcher configuration
                # on which file IO tasks are scheduled
                "file-io-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 589
                # The maximum number of bytes (or "unlimited") to transfer in one batch
                # when using `WriteFile` command which uses `FileChannel.transferTo` to
                # pipe files to a TCP socket. On some OS like Linux `FileChannel.transferTo`
                # may block for a long time when network IO is faster than file IO.
                # Decreasing the value may improve fairness while increasing may improve
                # throughput.
                "file-io-transferTo-limit" : "512 KiB",
                # reference.conf: 594
                # The number of times to retry the `finishConnect` call after being notified about
                # OP_CONNECT. Retries are needed if the OP_CONNECT notification doesn't imply that
                # `finishConnect` will succeed, which is the case on Android.
                "finish-connect-retries" : 5,
                # reference.conf: 577
                # Fully qualified config path which holds the dispatcher configuration
                # for the selector management actors
                "management-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 533
                # Maximum number of open channels supported by this TCP module; there is
                # no intrinsic general limit, this setting is meant to enable DoS
                # protection by limiting the number of concurrently connected clients.
                # Also note that this is a "soft" limit; in certain cases the implementation
                # will accept a few connections more or a few less than the number configured
                # here. Must be an integer > 0 or "unlimited".
                "max-channels" : 256000,
                # reference.conf: 560
                # The maximum number of bytes delivered by a `Received` message. Before
                # more data is read from the network the connection actor will try to
                # do other work.
                "max-received-message-size" : "unlimited",
                # reference.conf: 525
                # The number of selectors to stripe the served channels over; each of
                # these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf: 555
                # The duration a connection actor waits for a `Register` message from
                # its commander before aborting the connection.
                "register-timeout" : "5s",
                # reference.conf: 538
                # When trying to assign a new connection to a selector and the chosen
                # selector is at full capacity, retry selector choosing and assignment
                # this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf: 569
                # Fully qualified config path which holds the dispatcher configuration
                # to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf: 565
                # Enable fine grained logging of what goes on inside the implementation.
                # Be aware that this may log more than once per message sent to the actors
                # of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf: 603
                # On Windows connection aborts are not reliably detected unless an OP_READ is
                # registered on the selector _after_ the connection has been reset. This
                # workaround enables an OP_CONNECT which forces the abort to be visible on Windows.
                # Enabling this setting on other platforms than Windows will cause various failures
                # and undefined behavior.
                # Possible values of this key are on, off and auto where auto will enable the
                # workaround if Windows is detected automatically.
                "windows-connection-abort-workaround-enabled" : "auto",
                # reference.conf: 573
                # Fully qualified config path which holds the dispatcher configuration
                # for the read/write worker actors
                "worker-dispatcher" : "akka.actor.default-dispatcher"
            },
            # reference.conf: 606
            "udp" : {
                # reference.conf: 642
                # The maximal number of direct buffers kept in the direct buffer pool for
                # reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf: 638
                # The number of bytes per direct buffer in the pool used to read or write
                # network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf: 664
                # Fully qualified config path which holds the dispatcher configuration
                # for the selector management actors
                "management-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 615
                # Maximum number of open channels supported by this UDP module Generally
                # UDP does not require a large number of channels, therefore it is
                # recommended to keep this setting low.
                "max-channels" : 4096,
                # reference.conf: 610
                # The number of selectors to stripe the served channels over; each of
                # these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf: 634
                # The maximum number of datagrams that are read in one go,
                # higher numbers decrease latency, lower numbers increase fairness on
                # the worker-dispatcher
                "receive-throughput" : 3,
                # reference.conf: 647
                # The maximum number of bytes delivered by a `Received` message. Before
                # more data is read from the network the connection actor will try to
                # do other work.
                "received-message-size-limit" : "unlimited",
                # reference.conf: 624
                # The select loop can be used in two modes:
                # - setting "infinite" will select without a timeout, hogging a thread
                # - setting a positive timeout will do a bounded select call,
                #   enabling sharing of a single thread between multiple selectors
                #   (in this case you will have to use a different configuration for the
                #   selector-dispatcher, e.g. using "type=Dispatcher" with size 1)
                # - setting it to zero means polling, i.e. calling selectNow()
                "select-timeout" : "infinite",
                # reference.conf: 629
                # When trying to assign a new connection to a selector and the chosen
                # selector is at full capacity, retry selector choosing and assignment
                # this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf: 656
                # Fully qualified config path which holds the dispatcher configuration
                # to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf: 652
                # Enable fine grained logging of what goes on inside the implementation.
                # Be aware that this may log more than once per message sent to the actors
                # of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf: 660
                # Fully qualified config path which holds the dispatcher configuration
                # for the read/write worker actors
                "worker-dispatcher" : "akka.actor.default-dispatcher"
            },
            # reference.conf: 667
            "udp-connected" : {
                # reference.conf: 703
                # The maximal number of direct buffers kept in the direct buffer pool for
                # reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf: 699
                # The number of bytes per direct buffer in the pool used to read or write
                # network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf: 725
                # Fully qualified config path which holds the dispatcher configuration
                # for the selector management actors
                "management-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 676
                # Maximum number of open channels supported by this UDP module Generally
                # UDP does not require a large number of channels, therefore it is
                # recommended to keep this setting low.
                "max-channels" : 4096,
                # reference.conf: 671
                # The number of selectors to stripe the served channels over; each of
                # these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf: 695
                # The maximum number of datagrams that are read in one go,
                # higher numbers decrease latency, lower numbers increase fairness on
                # the worker-dispatcher
                "receive-throughput" : 3,
                # reference.conf: 708
                # The maximum number of bytes delivered by a `Received` message. Before
                # more data is read from the network the connection actor will try to
                # do other work.
                "received-message-size-limit" : "unlimited",
                # reference.conf: 685
                # The select loop can be used in two modes:
                # - setting "infinite" will select without a timeout, hogging a thread
                # - setting a positive timeout will do a bounded select call,
                #   enabling sharing of a single thread between multiple selectors
                #   (in this case you will have to use a different configuration for the
                #   selector-dispatcher, e.g. using "type=Dispatcher" with size 1)
                # - setting it to zero means polling, i.e. calling selectNow()
                "select-timeout" : "infinite",
                # reference.conf: 690
                # When trying to assign a new connection to a selector and the chosen
                # selector is at full capacity, retry selector choosing and assignment
                # this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf: 717
                # Fully qualified config path which holds the dispatcher configuration
                # to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf: 713
                # Enable fine grained logging of what goes on inside the implementation.
                # Be aware that this may log more than once per message sent to the actors
                # of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf: 721
                # Fully qualified config path which holds the dispatcher configuration
                # for the read/write worker actors
                "worker-dispatcher" : "akka.actor.default-dispatcher"
            }
        },
        # reference.conf: 60
        # JVM shutdown, System.exit(-1), in case of a fatal error,
        # such as OutOfMemoryError
        "jvm-exit-on-fatal-error" : "on",
        # application.conf: 17
        "log-config-on-start" : "on",
        # reference.conf: 43
        # Log at info level when messages are sent to dead letters.
        # Possible values:
        # on: all dead letters are logged
        # off: no logging of dead letters
        # n: positive integer, number of dead letters that will be logged
        "log-dead-letters" : 10,
        # reference.conf: 48
        # Possibility to turn off logging of dead letters while the actor system
        # is shutting down. Logging is only done when enabled by 'log-dead-letters'
        # setting.
        "log-dead-letters-during-shutdown" : "on",
        # reference.conf: 22
        # Loggers are created and registered synchronously during ActorSystem
        # start-up, and since they are actors, this timeout is used to bound the
        # waiting time
        "logger-startup-timeout" : "5s",
        # application.conf: 19
        "loggers" : [
            # application.conf: 19
            "akka.event.slf4j.Slf4jLogger"
        ],
        # application.conf: 15
        "loglevel" : "DEBUG",
        # reference.conf: 476
        # Used to set the behavior of the scheduler.
        # Changing the default values may change the system behavior drastically so make
        # sure you know what you're doing! See the Scheduler section of the Akka
        # Documentation for more details.
        "scheduler" : {
            # reference.conf: 502
            # This setting selects the timer implementation which shall be loaded at
            # system start-up.
            # The class given here must implement the akka.actor.Scheduler interface
            # and offer a public constructor which takes three arguments:
            #  1) com.typesafe.config.Config
            #  2) akka.event.LoggingAdapter
            #  3) java.util.concurrent.ThreadFactory
            "implementation" : "akka.actor.LightArrayRevolverScheduler",
            # reference.conf: 508
            # When shutting down the scheduler, there will typically be a thread which
            # needs to be stopped, and this timeout determines how long to wait for
            # that to happen. In case of timeout the shutdown of the actor system will
            # proceed without running possibly still enqueued tasks.
            "shutdown-timeout" : "5s",
            # reference.conf: 486
            # The LightArrayRevolverScheduler is used as the default scheduler in the
            # system. It does not execute the scheduled tasks on exact time, but on every
            # tick, it will run everything that is (over)due. You can increase or decrease
            # the accuracy of the execution timing by specifying smaller or larger tick
            # duration. If you are scheduling a lot of tasks you should consider increasing
            # the ticks per wheel.
            # Note that it might take up to 1 tick to stop the Timer, so setting the
            # tick-duration to a high value will make shutting down the actor system
            # take longer.
            "tick-duration" : "10ms",
            # reference.conf: 493
            # The timer uses a circular wheel of buckets to store the timer tasks.
            # This should be set such that the majority of scheduled timeouts (for high
            # scheduling frequency) will be shorter than one rotation of the wheel
            # (ticks-per-wheel * ticks-duration)
            # THIS MUST BE A POWER OF TWO!
            "ticks-per-wheel" : 512
        },
        # application.conf: 16
        "stdout-loglevel" : "DEBUG",
        # reference.conf: 10
        # Akka version, checked against the runtime version of Akka.
        "version" : "2.3.9"
    },
    # application.conf: 35
    "atmos" : {
        # application.conf: 36
        "trace" : {
            # application.conf: 37
            # enable tracing
            "enabled" : true,
            # application.conf: 38
            # give this node a name
            "node" : "AwesomeApplication",
            # application.conf: 46
            "sampling" : {
                # application.conf: 48
                # sample every 100th trace in this subtree
                "/actors/*" : 1,
                # application.conf: 47
                # sample every trace for someActor
                "/user/someActor" : 1
            },
            # application.conf: 40
            "traceable" : {
                # application.conf: 43
                # other actors are not traced
                "*" : "off",
                # application.conf: 41
                # trace the someActor
                "/actors/*" : "on",
                # application.conf: 42
                # trace all actors in this subtree
                "/user/actors/*" : "on"
            }
        }
    },
    # system properties
    "awt" : {
        # system properties
        "toolkit" : "sun.lwawt.macosx.LWCToolkit"
    },
    # system properties
    "file" : {
        # system properties
        "encoding" : {
            # system properties
            "pkg" : "sun.io"
        },
        # system properties
        "separator" : "/"
    },
    # system properties
    "ftp" : {
        # system properties
        "nonProxyHosts" : "local|*.local|169.254/16|*.169.254/16"
    },
    # system properties
    "gopherProxySet" : "false",
    # system properties
    "http" : {
        # system properties
        "nonProxyHosts" : "local|*.local|169.254/16|*.169.254/16"
    },
    # system properties
    "idea" : {
        # system properties
        "launcher" : {
            # system properties
            "bin" : {
                # system properties
                "path" : "/Applications/IntelliJ IDEA 15 CE.app/Contents/bin"
            },
            # system properties
            "port" : "7538"
        }
    },
    # system properties
    "java" : {
        # system properties
        "awt" : {
            # system properties
            "graphicsenv" : "sun.awt.CGraphicsEnvironment",
            # system properties
            "printerjob" : "sun.lwawt.macosx.CPrinterJob"
        },
        # system properties
        "class" : {
            # system properties
            "path" : "/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/lib/tools.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Users/jcohen66/src/scala/Transformer/target/scala-2.11/classes:/Users/jcohen66/dev/activator-dist-1.3.6/repository/ch.qos.logback/logback-classic/1.1.3/jars/logback-classic.jar:/Users/jcohen66/dev/activator-dist-1.3.6/repository/ch.qos.logback/logback-core/1.1.3/jars/logback-core.jar:/Users/jcohen66/.ivy2/cache/com.chuusai/shapeless_2.11/jars/shapeless_2.11-1.2.4.jar:/Users/jcohen66/.ivy2/cache/com.fasterxml.jackson.core/jackson-annotations/bundles/jackson-annotations-2.6.3.jar:/Users/jcohen66/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.6.3.jar:/Users/jcohen66/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.6.3.jar:/Users/jcohen66/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-paranamer/bundles/jackson-module-paranamer-2.6.3.jar:/Users/jcohen66/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-scala_2.11/bundles/jackson-module-scala_2.11-2.6.3.jar:/Users/jcohen66/.ivy2/cache/com.lambdaworks/jacks_2.11/jars/jacks_2.11-2.3.3.jar:/Users/jcohen66/.ivy2/cache/com.thoughtworks.paranamer/paranamer/jars/paranamer-2.6.jar:/Users/jcohen66/.ivy2/cache/com.typesafe/config/bundles/config-1.2.1.jar:/Users/jcohen66/.ivy2/cache/com.typesafe.akka/akka-actor_2.11/jars/akka-actor_2.11-2.3.9.jar:/Users/jcohen66/.ivy2/cache/com.typesafe.akka/akka-slf4j_2.11/jars/akka-slf4j_2.11-2.3.9.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-can_2.11/bundles/spray-can_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-http_2.11/bundles/spray-http_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-httpx_2.11/bundles/spray-httpx_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-io_2.11/bundles/spray-io_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-json_2.11/bundles/spray-json_2.11-1.3.1.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-routing_2.11/bundles/spray-routing_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/io.spray/spray-util_2.11/bundles/spray-util_2.11-1.3.3.jar:/Users/jcohen66/.ivy2/cache/junit/junit/jars/junit-4.12.jar:/Users/jcohen66/dev/activator-dist-1.3.6/repository/org.hamcrest/hamcrest-core/1.3/jars/hamcrest-core.jar:/Users/jcohen66/.ivy2/cache/org.jvnet.mimepull/mimepull/jars/mimepull-1.9.5.jar:/Users/jcohen66/dev/activator-dist-1.3.6/repository/org.mockito/mockito-core/1.9.5/jars/mockito-core.jar:/Users/jcohen66/dev/activator-dist-1.3.6/repository/org.objenesis/objenesis/1.0/jars/objenesis.jar:/Users/jcohen66/.ivy2/cache/org.parboiled/parboiled-core/jars/parboiled-core-1.1.7.jar:/Users/jcohen66/.ivy2/cache/org.parboiled/parboiled-scala_2.11/jars/parboiled-scala_2.11-1.1.7.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.0.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.7.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang/scalap/jars/scalap-2.11.0.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.11/bundles/scala-parser-combinators_2.11-1.0.1.jar:/Users/jcohen66/.ivy2/cache/org.scala-lang.modules/scala-xml_2.11/bundles/scala-xml_2.11-1.0.3.jar:/Users/jcohen66/dev/activator-dist-1.3.6/repository/org.slf4j/slf4j-api/1.7.7/jars/slf4j-api.jar:/Applications/IntelliJ IDEA 15 CE.app/Contents/lib/idea_rt.jar",
            # system properties
            "version" : "52.0"
        },
        # system properties
        "endorsed" : {
            # system properties
            "dirs" : "/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/endorsed"
        },
        # system properties
        "ext" : {
            # system properties
            "dirs" : "/Users/jcohen66/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"
        },
        # system properties
        "home" : "/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre",
        # system properties
        "io" : {
            # system properties
            "tmpdir" : "/var/folders/ds/_nrtvjz90sv_3pxx962xcy7c0000gn/T/"
        },
        # system properties
        "library" : {
            # system properties
            "path" : "/Users/jcohen66/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."
        },
        # system properties
        "runtime" : {
            # system properties
            "name" : "Java(TM) SE Runtime Environment",
            # system properties
            "version" : "1.8.0_60-b27"
        },
        # system properties
        "specification" : {
            # system properties
            "name" : "Java Platform API Specification",
            # system properties
            "vendor" : "Oracle Corporation",
            # system properties
            "version" : "1.8"
        },
        # system properties
        "vendor" : {
            # system properties
            "url" : {
                # system properties
                "bug" : "http://bugreport.sun.com/bugreport/"
            }
        },
        # system properties
        "version" : "1.8.0_60",
        # system properties
        "vm" : {
            # system properties
            "info" : "mixed mode",
            # system properties
            "name" : "Java HotSpot(TM) 64-Bit Server VM",
            # system properties
            "specification" : {
                # system properties
                "name" : "Java Virtual Machine Specification",
                # system properties
                "vendor" : "Oracle Corporation",
                # system properties
                "version" : "1.8"
            },
            # system properties
            "vendor" : "Oracle Corporation",
            # system properties
            "version" : "25.60-b23"
        }
    },
    # system properties
    "line" : {
        # system properties
        "separator" : "\n"
    },
    # application.conf: 1
    "myapp" : {
        # application.conf: 10
        "ask-timeout" : "15 seconds",
        # application.conf: 2
        "http" : {
            # application.conf: 3
            "host" : "0.0.0.0",
            # application.conf: 6
            "port" : 5000
        }
    },
    # system properties
    "os" : {
        # system properties
        "arch" : "x86_64",
        # system properties
        "name" : "Mac OS X",
        # system properties
        "version" : "10.11.1"
    },
    # system properties
    "path" : {
        # system properties
        "separator" : ":"
    },
    # system properties
    "socksNonProxyHosts" : "local|*.local|169.254/16|*.169.254/16",
    # reference.conf: 8
    "spray" : {
        # reference.conf: 8
        "can" : {
            # reference.conf: 189
            "client" : {
                # reference.conf: 239
                # Enables/disables an alternative request streaming mode that doesn't
                # use `Transfer-Encoding: chunked` but rather renders the individual
                # MessageChunks coming in from the application as parts of the original
                # request entity.
                # Enabling this mode causes all requests to require an explicit `Content-Length`
                # header for streaming requests.
                # Note that chunkless-streaming is implicitly enabled when streaming
                # HTTP/1.0 requests since they don't support `Transfer-Encoding: chunked`.
                "chunkless-streaming" : "off",
                # reference.conf: 254
                # The time period within which the TCP connecting process must be completed.
                # Set to `infinite` to disable.
                "connecting-timeout" : "10s",
                # reference.conf: 198
                # The time after which an idle connection will be automatically closed.
                # Set to `infinite` to completely disable idle timeouts.
                "idle-timeout" : "60 s",
                # reference.conf: 250
                # For HTTPS connections this setting specified the maximum number of
                # bytes that are encrypted in one go. Large requests are broken down in
                # chunks of this size so as to already begin sending before the request has
                # been encrypted entirely.
                "max-encryption-chunk-size" : "1m",
                # reference.conf: 320
                # The (default) configuration of the HTTP message parser for the server and
                # the client.
                # IMPORTANT: These settings (i.e. children of `spray.can.parsing`) can't be directly
                # overridden in `application.conf` to change the parser settings for client and server
                # altogether (see https://github.com/spray/spray/issues/346). Instead, override the
                # concrete settings beneath `spray.can.server.parsing` and `spray.can.client.parsing`
                # where these settings are copied to.
                "parsing" : {
                    # reference.conf: 357
                    # limits for the number of different values per header type that the
                    # header cache will hold
                    "header-cache" : {
                        # reference.conf: 359
                        "Content-MD5" : 0,
                        # reference.conf: 360
                        "Date" : 0,
                        # reference.conf: 361
                        "If-Match" : 0,
                        # reference.conf: 362
                        "If-Modified-Since" : 0,
                        # reference.conf: 363
                        "If-None-Match" : 0,
                        # reference.conf: 364
                        "If-Range" : 0,
                        # reference.conf: 365
                        "If-Unmodified-Since" : 0,
                        # reference.conf: 366
                        "User-Agent" : 32,
                        # reference.conf: 358
                        "default" : 12
                    },
                    # reference.conf: 353
                    # Enables/disables the logging of warning messages in case an incoming
                    # message (request or response) contains an HTTP header which cannot be
                    # parsed into its high-level model class due to incompatible syntax.
                    # Note that, independently of this settings, spray will accept messages
                    # with such headers as long as the message as a whole would still be legal
                    # under the HTTP specification even without this header.
                    # If a header cannot be parsed into a high-level model instance it will be
                    # provided as a `RawHeader`.
                    "illegal-header-warnings" : "on",
                    # reference.conf: 372
                    # Sets the size starting from which incoming http-messages will be delivered
                    # in chunks regardless of whether chunking is actually used on the wire.
                    # Set to infinite to disable auto chunking.
                    "incoming-auto-chunking-threshold-size" : "infinite",
                    # reference.conf: 328
                    "max-chunk-ext-length" : 256,
                    # reference.conf: 329
                    "max-chunk-size" : "1m",
                    # reference.conf: 327
                    "max-content-length" : "8m",
                    # reference.conf: 326
                    "max-header-count" : 64,
                    # reference.conf: 324
                    "max-header-name-length" : 64,
                    # reference.conf: 325
                    "max-header-value-length" : "8k",
                    # reference.conf: 323
                    "max-response-reason-length" : 64,
                    # reference.conf: 322
                    # The limits for the various parts of the HTTP message parser.
                    "max-uri-length" : "2k",
                    # reference.conf: 377
                    # Enables/disables inclusion of an SSL-Session-Info header in parsed
                    # messages over SSL transports (i.e., HttpRequest on server side and
                    # HttpResponse on client side).
                    "ssl-session-info-header" : "off",
                    # reference.conf: 343
                    # Sets the strictness mode for parsing request target URIs.
                    # The following values are defined:
                    # 
                    # `strict`: RFC3986-compliant URIs are required,
                    #     a 400 response is triggered on violations
                    # 
                    # `relaxed`: all visible 7-Bit ASCII chars are allowed
                    # 
                    # `relaxed-with-raw-query`: like `relaxed` but additionally
                    #     the URI query is not parsed, but delivered as one raw string
                    #     as the `key` value of a single Query structure element.
                    # 
                    "uri-parsing-mode" : "strict"
                },
                # reference.conf: 258
                # The proxy configurations to be used for requests with the specified
                # scheme.
                "proxy" : {
                    # reference.conf: 269
                    # Proxy settings for unencrypted HTTP requests
                    # Set to 'none' to always connect directly, 'default' to use the system
                    # settings as described in http://docs.oracle.com/javase/6/docs/technotes/guides/net/proxies.html
                    # or specify the proxy host, port and non proxy hosts as demonstrated
                    # in the following example:
                    # http {
                    #   host = myproxy.com
                    #   port = 8080
                    #   non-proxy-hosts = ["*.direct-access.net"]
                    # }
                    "http" : "default",
                    # reference.conf: 272
                    # Proxy settings for HTTPS requests (currently unsupported)
                    "https" : "default"
                },
                # reference.conf: 219
                # the "granularity" of timeout checking for both idle connections timeouts
                # as well as request timeouts, should rarely be needed to modify.
                # If set to `infinite` request and connection timeout checking is disabled.
                "reaping-cycle" : "250 ms",
                # reference.conf: 244
                # The initial size if the buffer to render the request headers in.
                # Can be used for fine-tuning request rendering performance but probably
                # doesn't have to be fiddled with in most applications.
                "request-header-size-hint" : 512,
                # reference.conf: 214
                # The max time period that a client connection will be waiting for a response
                # before triggering a request timeout. The timer for this logic is not started
                # until the connection is actually in a state to receive the response, which
                # may be quite some time after the request has been received from the
                # application!
                # There are two main reasons to delay the start of the request timeout timer:
                # 1. On the host-level API with pipelining disabled:
                #    If the request cannot be sent immediately because all connections are
                #    currently busy with earlier requests it has to be queued until a
                #    connection becomes available.
                # 2. With pipelining enabled:
                #    The request timeout timer starts only once the response for the
                #    preceding request on the connection has arrived.
                # Set to `infinite` to completely disable request timeouts.
                "request-timeout" : "20 s",
                # reference.conf: 229
                # If this setting is non-zero the HTTP client connections automatically
                # aggregate incoming response chunks into full HttpResponses before
                # dispatching them to the application.
                # If the size of the aggregated response surpasses the specified limit the
                # HTTP client connection is closed and an error returned.
                # Set to zero to disable automatic request chunk aggregation and have
                # ChunkedResponseStart, MessageChunk and ChunkedMessageEnd messages be
                # dispatched to the application.
                "response-chunk-aggregation-limit" : "1m",
                # reference.conf: 276
                # Enables more verbose DEBUG logging for debugging SSL related issues.
                "ssl-tracing" : "off",
                # reference.conf: 12-194
                # Always contains the deployed version of spray.
                # Referenced, for example, from the `spray.can.server.server-header` setting.
                "user-agent-header" : "spray-can/1.3.3"
            },
            # reference.conf: 398
            # Fully qualified config path which holds the dispatcher configuration
            # to be used for HttpServerConnection and HttpClientConnection actors.
            "connection-dispatcher" : "akka.actor.default-dispatcher",
            # reference.conf: 282
            "host-connector" : {
                # reference.conf: 189
                "client" : {
                    # reference.conf: 239
                    # Enables/disables an alternative request streaming mode that doesn't
                    # use `Transfer-Encoding: chunked` but rather renders the individual
                    # MessageChunks coming in from the application as parts of the original
                    # request entity.
                    # Enabling this mode causes all requests to require an explicit `Content-Length`
                    # header for streaming requests.
                    # Note that chunkless-streaming is implicitly enabled when streaming
                    # HTTP/1.0 requests since they don't support `Transfer-Encoding: chunked`.
                    "chunkless-streaming" : "off",
                    # reference.conf: 254
                    # The time period within which the TCP connecting process must be completed.
                    # Set to `infinite` to disable.
                    "connecting-timeout" : "10s",
                    # reference.conf: 198
                    # The time after which an idle connection will be automatically closed.
                    # Set to `infinite` to completely disable idle timeouts.
                    "idle-timeout" : "60 s",
                    # reference.conf: 250
                    # For HTTPS connections this setting specified the maximum number of
                    # bytes that are encrypted in one go. Large requests are broken down in
                    # chunks of this size so as to already begin sending before the request has
                    # been encrypted entirely.
                    "max-encryption-chunk-size" : "1m",
                    # reference.conf: 320
                    # The (default) configuration of the HTTP message parser for the server and
                    # the client.
                    # IMPORTANT: These settings (i.e. children of `spray.can.parsing`) can't be directly
                    # overridden in `application.conf` to change the parser settings for client and server
                    # altogether (see https://github.com/spray/spray/issues/346). Instead, override the
                    # concrete settings beneath `spray.can.server.parsing` and `spray.can.client.parsing`
                    # where these settings are copied to.
                    "parsing" : {
                        # reference.conf: 357
                        # limits for the number of different values per header type that the
                        # header cache will hold
                        "header-cache" : {
                            # reference.conf: 359
                            "Content-MD5" : 0,
                            # reference.conf: 360
                            "Date" : 0,
                            # reference.conf: 361
                            "If-Match" : 0,
                            # reference.conf: 362
                            "If-Modified-Since" : 0,
                            # reference.conf: 363
                            "If-None-Match" : 0,
                            # reference.conf: 364
                            "If-Range" : 0,
                            # reference.conf: 365
                            "If-Unmodified-Since" : 0,
                            # reference.conf: 366
                            "User-Agent" : 32,
                            # reference.conf: 358
                            "default" : 12
                        },
                        # reference.conf: 353
                        # Enables/disables the logging of warning messages in case an incoming
                        # message (request or response) contains an HTTP header which cannot be
                        # parsed into its high-level model class due to incompatible syntax.
                        # Note that, independently of this settings, spray will accept messages
                        # with such headers as long as the message as a whole would still be legal
                        # under the HTTP specification even without this header.
                        # If a header cannot be parsed into a high-level model instance it will be
                        # provided as a `RawHeader`.
                        "illegal-header-warnings" : "on",
                        # reference.conf: 372
                        # Sets the size starting from which incoming http-messages will be delivered
                        # in chunks regardless of whether chunking is actually used on the wire.
                        # Set to infinite to disable auto chunking.
                        "incoming-auto-chunking-threshold-size" : "infinite",
                        # reference.conf: 328
                        "max-chunk-ext-length" : 256,
                        # reference.conf: 329
                        "max-chunk-size" : "1m",
                        # reference.conf: 327
                        "max-content-length" : "8m",
                        # reference.conf: 326
                        "max-header-count" : 64,
                        # reference.conf: 324
                        "max-header-name-length" : 64,
                        # reference.conf: 325
                        "max-header-value-length" : "8k",
                        # reference.conf: 323
                        "max-response-reason-length" : 64,
                        # reference.conf: 322
                        # The limits for the various parts of the HTTP message parser.
                        "max-uri-length" : "2k",
                        # reference.conf: 377
                        # Enables/disables inclusion of an SSL-Session-Info header in parsed
                        # messages over SSL transports (i.e., HttpRequest on server side and
                        # HttpResponse on client side).
                        "ssl-session-info-header" : "off",
                        # reference.conf: 343
                        # Sets the strictness mode for parsing request target URIs.
                        # The following values are defined:
                        # 
                        # `strict`: RFC3986-compliant URIs are required,
                        #     a 400 response is triggered on violations
                        # 
                        # `relaxed`: all visible 7-Bit ASCII chars are allowed
                        # 
                        # `relaxed-with-raw-query`: like `relaxed` but additionally
                        #     the URI query is not parsed, but delivered as one raw string
                        #     as the `key` value of a single Query structure element.
                        # 
                        "uri-parsing-mode" : "strict"
                    },
                    # reference.conf: 258
                    # The proxy configurations to be used for requests with the specified
                    # scheme.
                    "proxy" : {
                        # reference.conf: 269
                        # Proxy settings for unencrypted HTTP requests
                        # Set to 'none' to always connect directly, 'default' to use the system
                        # settings as described in http://docs.oracle.com/javase/6/docs/technotes/guides/net/proxies.html
                        # or specify the proxy host, port and non proxy hosts as demonstrated
                        # in the following example:
                        # http {
                        #   host = myproxy.com
                        #   port = 8080
                        #   non-proxy-hosts = ["*.direct-access.net"]
                        # }
                        "http" : "default",
                        # reference.conf: 272
                        # Proxy settings for HTTPS requests (currently unsupported)
                        "https" : "default"
                    },
                    # reference.conf: 219
                    # the "granularity" of timeout checking for both idle connections timeouts
                    # as well as request timeouts, should rarely be needed to modify.
                    # If set to `infinite` request and connection timeout checking is disabled.
                    "reaping-cycle" : "250 ms",
                    # reference.conf: 244
                    # The initial size if the buffer to render the request headers in.
                    # Can be used for fine-tuning request rendering performance but probably
                    # doesn't have to be fiddled with in most applications.
                    "request-header-size-hint" : 512,
                    # reference.conf: 214
                    # The max time period that a client connection will be waiting for a response
                    # before triggering a request timeout. The timer for this logic is not started
                    # until the connection is actually in a state to receive the response, which
                    # may be quite some time after the request has been received from the
                    # application!
                    # There are two main reasons to delay the start of the request timeout timer:
                    # 1. On the host-level API with pipelining disabled:
                    #    If the request cannot be sent immediately because all connections are
                    #    currently busy with earlier requests it has to be queued until a
                    #    connection becomes available.
                    # 2. With pipelining enabled:
                    #    The request timeout timer starts only once the response for the
                    #    preceding request on the connection has arrived.
                    # Set to `infinite` to completely disable request timeouts.
                    "request-timeout" : "20 s",
                    # reference.conf: 229
                    # If this setting is non-zero the HTTP client connections automatically
                    # aggregate incoming response chunks into full HttpResponses before
                    # dispatching them to the application.
                    # If the size of the aggregated response surpasses the specified limit the
                    # HTTP client connection is closed and an error returned.
                    # Set to zero to disable automatic request chunk aggregation and have
                    # ChunkedResponseStart, MessageChunk and ChunkedMessageEnd messages be
                    # dispatched to the application.
                    "response-chunk-aggregation-limit" : "1m",
                    # reference.conf: 276
                    # Enables more verbose DEBUG logging for debugging SSL related issues.
                    "ssl-tracing" : "off",
                    # reference.conf: 12-194
                    # Always contains the deployed version of spray.
                    # Referenced, for example, from the `spray.can.server.server-header` setting.
                    "user-agent-header" : "spray-can/1.3.3"
                },
                # reference.conf: 307
                # The time after which an idle `HttpHostConnector` (without open
                # connections) will automatically terminate itself.
                # Set to `infinite` to completely disable idle timeouts.
                "idle-timeout" : "30 s",
                # reference.conf: 285
                # The maximum number of parallel connections that an `HttpHostConnector`
                # is allowed to establish to a host. Must be greater than zero.
                "max-connections" : 4,
                # reference.conf: 297
                # Configures redirection following.
                # If set to zero redirection responses will not be followed, i.e. they'll be returned to the user as is.
                # If set to a value > zero redirection responses will be followed up to the given number of times.
                # If the redirection chain is longer than the configured value the first redirection response that is
                # is not followed anymore is returned to the user as is.
                "max-redirects" : 0,
                # reference.conf: 290
                # The maximum number of times an `HttpHostConnector` attempts to repeat
                # failed requests (if the request can be safely retried) before
                # giving up and returning an error.
                "max-retries" : 5,
                # reference.conf: 302
                # If this setting is enabled, the `HttpHostConnector` pipelines requests
                # across connections, otherwise only one single request can be "open"
                # on a particular HTTP connection.
                "pipelining" : "off"
            },
            # reference.conf: 390
            # Fully qualified config path which holds the dispatcher configuration
            # to be used for the HttpHostConnector actors.
            "host-connector-dispatcher" : "akka.actor.default-dispatcher",
            # reference.conf: 394
            # Fully qualified config path which holds the dispatcher configuration
            # to be used for HttpListener actors.
            "listener-dispatcher" : "akka.actor.default-dispatcher",
            # reference.conf: 382
            # Fully qualified config path which holds the dispatcher configuration
            # to be used for the HttpManager.
            "manager-dispatcher" : "akka.actor.default-dispatcher",
            # reference.conf: 320
            # The (default) configuration of the HTTP message parser for the server and
            # the client.
            # IMPORTANT: These settings (i.e. children of `spray.can.parsing`) can't be directly
            # overridden in `application.conf` to change the parser settings for client and server
            # altogether (see https://github.com/spray/spray/issues/346). Instead, override the
            # concrete settings beneath `spray.can.server.parsing` and `spray.can.client.parsing`
            # where these settings are copied to.
            "parsing" : {
                # reference.conf: 357
                # limits for the number of different values per header type that the
                # header cache will hold
                "header-cache" : {
                    # reference.conf: 359
                    "Content-MD5" : 0,
                    # reference.conf: 360
                    "Date" : 0,
                    # reference.conf: 361
                    "If-Match" : 0,
                    # reference.conf: 362
                    "If-Modified-Since" : 0,
                    # reference.conf: 363
                    "If-None-Match" : 0,
                    # reference.conf: 364
                    "If-Range" : 0,
                    # reference.conf: 365
                    "If-Unmodified-Since" : 0,
                    # reference.conf: 366
                    "User-Agent" : 32,
                    # reference.conf: 358
                    "default" : 12
                },
                # reference.conf: 353
                # Enables/disables the logging of warning messages in case an incoming
                # message (request or response) contains an HTTP header which cannot be
                # parsed into its high-level model class due to incompatible syntax.
                # Note that, independently of this settings, spray will accept messages
                # with such headers as long as the message as a whole would still be legal
                # under the HTTP specification even without this header.
                # If a header cannot be parsed into a high-level model instance it will be
                # provided as a `RawHeader`.
                "illegal-header-warnings" : "on",
                # reference.conf: 372
                # Sets the size starting from which incoming http-messages will be delivered
                # in chunks regardless of whether chunking is actually used on the wire.
                # Set to infinite to disable auto chunking.
                "incoming-auto-chunking-threshold-size" : "infinite",
                # reference.conf: 328
                "max-chunk-ext-length" : 256,
                # reference.conf: 329
                "max-chunk-size" : "1m",
                # reference.conf: 327
                "max-content-length" : "8m",
                # reference.conf: 326
                "max-header-count" : 64,
                # reference.conf: 324
                "max-header-name-length" : 64,
                # reference.conf: 325
                "max-header-value-length" : "8k",
                # reference.conf: 323
                "max-response-reason-length" : 64,
                # reference.conf: 322
                # The limits for the various parts of the HTTP message parser.
                "max-uri-length" : "2k",
                # reference.conf: 377
                # Enables/disables inclusion of an SSL-Session-Info header in parsed
                # messages over SSL transports (i.e., HttpRequest on server side and
                # HttpResponse on client side).
                "ssl-session-info-header" : "off",
                # reference.conf: 343
                # Sets the strictness mode for parsing request target URIs.
                # The following values are defined:
                # 
                # `strict`: RFC3986-compliant URIs are required,
                #     a 400 response is triggered on violations
                # 
                # `relaxed`: all visible 7-Bit ASCII chars are allowed
                # 
                # `relaxed-with-raw-query`: like `relaxed` but additionally
                #     the URI query is not parsed, but delivered as one raw string
                #     as the `key` value of a single Query structure element.
                # 
                "uri-parsing-mode" : "strict"
            },
            # reference.conf: 10
            "server" : {
                # reference.conf: 168
                # Enables/disables automatic back-pressure handling by write buffering and
                # receive throttling
                "automatic-back-pressure-handling" : "on",
                # reference.conf: 170
                "back-pressure" : {
                    # reference.conf: 174
                    # The reciprocal rate of requested Acks per NoAcks. E.g. the default value
                    # '10' means that every 10th write request is acknowledged. This affects the
                    # number of writes each connection has to buffer even in absence of back-pressure.
                    "noack-rate" : 10,
                    # reference.conf: 179
                    # The lower limit the write queue size has to shrink to before reads are resumed.
                    # Use 'infinite' to disable the low-watermark so that reading is resumed instantly
                    # after the next successful write.
                    "reading-low-watermark" : "infinite"
                },
                # reference.conf: 136
                # The time period within which the TCP binding process must be completed.
                # Set to `infinite` to disable.
                "bind-timeout" : "1s",
                # reference.conf: 55
                # The period during which a service must respond to a `ChunkedRequestStart` message
                # with a `RegisterChunkHandler` message. During the registration period reading from
                # the network is suspended. It is still possible that some chunks have already been
                # received which will be buffered until the registration is received or the timeout is
                # triggered. If the timeout is triggered the connection is immediately aborted.
                "chunkhandler-registration-timeout" : "500 ms",
                # reference.conf: 98
                # Enables/disables an alternative response streaming mode that doesn't
                # use `Transfer-Encoding: chunked` but rather renders the individual
                # MessageChunks coming in from the application as parts of the original
                # response entity.
                # Enabling this mode causes all connections to be closed after a streaming
                # response has been finished since there is no other way to signal the
                # response end to the client.
                # Note that chunkless-streaming is implicitly enabled when streaming
                # responses to HTTP/1.0 clients (since they don't support
                # `Transfer-Encoding: chunked`)
                "chunkless-streaming" : "off",
                # reference.conf: 164
                # If this setting is empty the server only accepts requests that carry a
                # non-empty `Host` header. Otherwise it responds with `400 Bad Request`.
                # Set to a non-empty value to be used in lieu of a missing or empty `Host`
                # header to make the server accept such requests.
                # Note that the server will never accept HTTP/1.1 request without a `Host`
                # header, i.e. this setting only affects HTTP/1.1 requests with an empty
                # `Host` header as well as HTTP/1.0 requests.
                # Examples: `www.spray.io` or `example.com:8080`
                "default-host-header" : "",
                # reference.conf: 37
                # The time after which an idle connection will be automatically closed.
                # Set to `infinite` to completely disable idle connection timeouts.
                "idle-timeout" : "60 s",
                # reference.conf: 132
                # For HTTPS connections this setting specified the maximum number of
                # bytes that are encrypted in one go. Large responses are broken down in
                # chunks of this size so as to already begin sending before the response has
                # been encrypted entirely.
                "max-encryption-chunk-size" : "1m",
                # reference.conf: 320
                # The (default) configuration of the HTTP message parser for the server and
                # the client.
                # IMPORTANT: These settings (i.e. children of `spray.can.parsing`) can't be directly
                # overridden in `application.conf` to change the parser settings for client and server
                # altogether (see https://github.com/spray/spray/issues/346). Instead, override the
                # concrete settings beneath `spray.can.server.parsing` and `spray.can.client.parsing`
                # where these settings are copied to.
                "parsing" : {
                    # reference.conf: 357
                    # limits for the number of different values per header type that the
                    # header cache will hold
                    "header-cache" : {
                        # reference.conf: 359
                        "Content-MD5" : 0,
                        # reference.conf: 360
                        "Date" : 0,
                        # reference.conf: 361
                        "If-Match" : 0,
                        # reference.conf: 362
                        "If-Modified-Since" : 0,
                        # reference.conf: 363
                        "If-None-Match" : 0,
                        # reference.conf: 364
                        "If-Range" : 0,
                        # reference.conf: 365
                        "If-Unmodified-Since" : 0,
                        # reference.conf: 366
                        "User-Agent" : 32,
                        # reference.conf: 358
                        "default" : 12
                    },
                    # reference.conf: 353
                    # Enables/disables the logging of warning messages in case an incoming
                    # message (request or response) contains an HTTP header which cannot be
                    # parsed into its high-level model class due to incompatible syntax.
                    # Note that, independently of this settings, spray will accept messages
                    # with such headers as long as the message as a whole would still be legal
                    # under the HTTP specification even without this header.
                    # If a header cannot be parsed into a high-level model instance it will be
                    # provided as a `RawHeader`.
                    "illegal-header-warnings" : "on",
                    # reference.conf: 372
                    # Sets the size starting from which incoming http-messages will be delivered
                    # in chunks regardless of whether chunking is actually used on the wire.
                    # Set to infinite to disable auto chunking.
                    "incoming-auto-chunking-threshold-size" : "infinite",
                    # reference.conf: 328
                    "max-chunk-ext-length" : 256,
                    # reference.conf: 329
                    "max-chunk-size" : "1m",
                    # reference.conf: 327
                    "max-content-length" : "8m",
                    # reference.conf: 326
                    "max-header-count" : 64,
                    # reference.conf: 324
                    "max-header-name-length" : 64,
                    # reference.conf: 325
                    "max-header-value-length" : "8k",
                    # reference.conf: 323
                    "max-response-reason-length" : 64,
                    # reference.conf: 322
                    # The limits for the various parts of the HTTP message parser.
                    "max-uri-length" : "2k",
                    # reference.conf: 377
                    # Enables/disables inclusion of an SSL-Session-Info header in parsed
                    # messages over SSL transports (i.e., HttpRequest on server side and
                    # HttpResponse on client side).
                    "ssl-session-info-header" : "off",
                    # reference.conf: 343
                    # Sets the strictness mode for parsing request target URIs.
                    # The following values are defined:
                    # 
                    # `strict`: RFC3986-compliant URIs are required,
                    #     a 400 response is triggered on violations
                    # 
                    # `relaxed`: all visible 7-Bit ASCII chars are allowed
                    # 
                    # `relaxed-with-raw-query`: like `relaxed` but additionally
                    #     the URI query is not parsed, but delivered as one raw string
                    #     as the `key` value of a single Query structure element.
                    # 
                    "uri-parsing-mode" : "strict"
                },
                # reference.conf: 154
                # The time after which a connection is aborted (RST) after a parsing error
                # occurred. The timeout prevents a connection which is already known to be
                # erroneous from receiving evermore data even if all of the data will be ignored.
                # However, in case of a connection abortion the client usually doesn't properly
                # receive the error response. This timeout is a trade-off which allows the client
                # some time to finish its request and receive a proper error response before the
                # connection is forcibly closed to free resources.
                "parsing-error-abort-timeout" : "2s",
                # reference.conf: 33
                # The maximum number of requests that are accepted (and dispatched to
                # the application) on one single connection before the first request
                # has to be completed.
                # Incoming requests that would cause the pipelining limit to be exceeded
                # are not read from the connections socket so as to build up "back-pressure"
                # to the client via TCP flow control.
                # A setting of 1 disables HTTP pipelining, since only one request per
                # connection can be "open" (i.e. being processed by the application) at any
                # time. Set to higher values to enable HTTP pipelining.
                # Set to 'disabled' for completely disabling pipelining limits
                # (not recommended on public-facing servers due to risk of DoS attacks).
                # This value must be > 0 and <= 128.
                "pipelining-limit" : 1,
                # reference.conf: 78
                # Enables/disables the addition of a `Raw-Request-URI` header holding the
                # original raw request URI as the client has sent it.
                "raw-request-uri-header" : "off",
                # reference.conf: 65
                # The "granularity" of timeout checking for both idle connections timeouts
                # as well as request timeouts, should rarely be needed to modify.
                # If set to `infinite` request and connection timeout checking is disabled.
                "reaping-cycle" : "250 ms",
                # reference.conf: 145
                # The time period within which a connection handler must have been
                # registered after the bind handler has received a `Connected` event.
                # Set to `infinite` to disable.
                "registration-timeout" : "1s",
                # reference.conf: 74
                # Enables/disables the addition of a `Remote-Address` header
                # holding the clients (remote) IP address.
                "remote-address-header" : "off",
                # reference.conf: 121
                # If this setting is non-zero the HTTP server automatically aggregates
                # incoming request chunks into full HttpRequests before dispatching them to
                # the application. If the size of the aggregated requests surpasses the
                # specified limit the server responds with a `413 Request Entity Too Large`
                # error response before closing the connection.
                # Set to zero to disable automatic request chunk aggregation and have
                # ChunkedRequestStart, MessageChunk and ChunkedMessageEnd messages be
                # dispatched to the handler.
                "request-chunk-aggregation-limit" : "1m",
                # reference.conf: 42
                # If a request hasn't been responded to after the time period set here
                # a `spray.http.Timedout` message will be sent to the timeout handler.
                # Set to `infinite` to completely disable request timeouts.
                "request-timeout" : "20 s",
                # reference.conf: 126
                # The initial size if the buffer to render the response headers in.
                # Can be used for fine-tuning response rendering performance but probably
                # doesn't have to be fiddled with in most applications.
                "response-header-size-hint" : 512,
                # reference.conf: 12-13
                # Always contains the deployed version of spray.
                # Referenced, for example, from the `spray.can.server.server-header` setting.
                "server-header" : "spray-can/1.3.3",
                # reference.conf: 19
                # Enables/disables SSL encryption.
                # If enabled the server uses the implicit `ServerSSLEngineProvider` member
                # of the `Bind` command to create `SSLEngine` instances for the underlying
                # IO connection.
                "ssl-encryption" : "off",
                # reference.conf: 183
                # Enables more verbose DEBUG logging for debugging SSL related issues.
                "ssl-tracing" : "off",
                # reference.conf: 70
                # Enables/disables support for statistics collection and querying.
                # Even though stats keeping overhead is small,
                # for maximum performance switch off when not needed.
                "stats-support" : "on",
                # reference.conf: 60
                # The path of the actor to send `spray.http.Timedout` messages to.
                # If empty all `Timedout` messages will go to the "regular" request
                # handling actor.
                "timeout-handler" : "",
                # reference.conf: 48
                # After a `Timedout` message has been sent to the timeout handler and the
                # request still hasn't been completed after the time period set here
                # the server will complete the request itself with an error response.
                # Set to `infinite` to disable timeout timeouts.
                "timeout-timeout" : "2 s",
                # reference.conf: 86
                # Enables/disables automatic handling of HEAD requests.
                # If this setting is enabled the server dispatches HEAD requests as GET
                # requests to the application and automatically strips off all message
                # bodies from outgoing responses.
                # Note that, even when this setting is off the server will never send
                # out message bodies on responses to HEAD requests.
                "transparent-head-requests" : "on",
                # reference.conf: 140
                # The time period within which the TCP unbinding process must be completed.
                # Set to `infinite` to disable.
                "unbind-timeout" : "1s",
                # reference.conf: 111
                # Enables/disables the logging of the full (potentially multiple line)
                # error message to the server logs.
                # If disabled only a single line will be logged.
                "verbose-error-logging" : "off",
                # reference.conf: 106
                # Enables/disables the returning of more detailed error messages to
                # the client in the error response.
                # Should be disabled for browser-facing APIs due to the risk of XSS attacks
                # and (probably) enabled for internal or non-browser APIs.
                # Note that spray will always produce log messages containing the full
                # error details.
                "verbose-error-messages" : "off"
            },
            # reference.conf: 386
            # Fully qualified config path which holds the dispatcher configuration
            # to be used for the HttpClientSettingsGroup actors.
            "settings-group-dispatcher" : "akka.actor.default-dispatcher"
        },
        # reference.conf: 8
        "routing" : {
            # reference.conf: 22
            # the size of an individual chunk when streaming file content
            "file-chunking-chunk-size" : "128k",
            # reference.conf: 19
            # the minimal file size triggering file content streaming
            # set to zero to disable automatic file-chunking in the FileAndResourceDirectives
            "file-chunking-threshold-size" : "128k",
            # reference.conf: 25
            # Enables/disables ETag and `If-Modified-Since` support for FileAndResourceDirectives
            "file-get-conditional" : "on",
            # reference.conf: 38
            # the maximum size between two requested ranges.
            # Ranges with less space in between will be coalesced.
            "range-coalescing-threshold" : 80,
            # reference.conf: 42
            # the maximum number of allowed ranges per request.
            # Requests with more ranges will be rejected due to DOS suspicion.
            "range-count-limit" : 16,
            # reference.conf: 28
            # Enables/disables the rendering of the "rendered by" footer in directory listings
            "render-vanity-footer" : "yes",
            # reference.conf: 32
            # a config section holding plain-text user/password entries
            # for the default FromConfigUserPassAuthenticator
            "users" : {},
            # reference.conf: 15
            # Enables/disables the returning of more detailed error messages to the
            # client in the error response
            # Should be disabled for browser-facing APIs due to the risk of XSS attacks
            # and (probably) enabled for internal or non-browser APIs
            # (Note that spray will always produce log messages containing the full error details)
            "verbose-error-messages" : "off"
        },
        # reference.conf: 12
        # Always contains the deployed version of spray.
        # Referenced, for example, from the `spray.can.server.server-header` setting.
        "version" : "1.3.3"
    },
    # system properties
    "sun" : {
        # system properties
        "arch" : {
            # system properties
            "data" : {
                # system properties
                "model" : "64"
            }
        },
        # system properties
        "boot" : {
            # system properties
            "class" : {
                # system properties
                "path" : "/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes"
            },
            # system properties
            "library" : {
                # system properties
                "path" : "/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib"
            }
        },
        # system properties
        "cpu" : {
            # system properties
            "endian" : "little",
            # system properties
            "isalist" : ""
        },
        # system properties
        "io" : {
            # system properties
            "unicode" : {
                # system properties
                "encoding" : "UnicodeBig"
            }
        },
        # system properties
        "java" : {
            # system properties
            "command" : "com.intellij.rt.execution.application.AppMain TransformerMain",
            # system properties
            "launcher" : "SUN_STANDARD"
        },
        # system properties
        "jnu" : {
            # system properties
            "encoding" : "UTF-8"
        },
        # system properties
        "management" : {
            # system properties
            "compiler" : "HotSpot 64-Bit Tiered Compilers"
        },
        # system properties
        "os" : {
            # system properties
            "patch" : {
                # system properties
                "level" : "unknown"
            }
        }
    },
    # system properties
    "user" : {
        # system properties
        "country" : "US",
        # system properties
        "dir" : "/Users/jcohen66/src/scala/Transformer",
        # system properties
        "home" : "/Users/jcohen66",
        # system properties
        "language" : "en",
        # system properties
        "name" : "jcohen66",
        # system properties
        "timezone" : ""
    }
}

[INFO] [2015-11-21 12:32:43,210] [transformer-akka.actor.default-dispatcher-7] a.FileReaderActor: reading file: /Users/jcohen66/src/scala/Transformer/test_csv.txt
[INFO] [2015-11-21 12:32:43,237] [transformer-akka.actor.default-dispatcher-19] a.FileReaderActor: Read: Client(1, John, Doe) from file
[INFO] [2015-11-21 12:32:43,238] [transformer-akka.actor.default-dispatcher-19] a.FileReaderActor: Read: Client(2, Jane, Smith) from file
[INFO] [2015-11-21 12:32:43,238] [transformer-akka.actor.default-dispatcher-19] a.FileReaderActor: Read: Client(3, Tom, Jones) from file
[INFO] [2015-11-21 12:32:43,238] [transformer-akka.actor.default-dispatcher-19] a.FileReaderActor: Read: Client(4, Edna, Post) from file
[INFO] [2015-11-21 12:32:43,239] [transformer-akka.actor.default-dispatcher-19] a.FileReaderActor: Read: Client(5, Polly, Draper) from file
[INFO] [2015-11-21 12:32:43,239] [transformer-akka.actor.default-dispatcher-19] a.FileReaderActor: Read: Client(6, Bob, Smith) from file
[INFO] [2015-11-21 12:32:43,239] [transformer-akka.actor.default-dispatcher-19] a.FileReaderActor: Read: Client(7, Wally, Abdo) from file
[INFO] [2015-11-21 12:32:43,239] [transformer-akka.actor.default-dispatcher-19] a.FileReaderActor: Read: Client(8, Walter, White) from file
[INFO] [2015-11-21 12:32:43,240] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: received Client: Client(1, John, Doe)
[INFO] [2015-11-21 12:32:43,240] [transformer-akka.actor.default-dispatcher-19] a.FileReaderActor: Read: Client(9, Andrew, Colt) from file
[INFO] [2015-11-21 12:32:43,240] [transformer-akka.actor.default-dispatcher-19] a.FileReaderActor: Read: Client(10, Boyd, Madsen) from file
[INFO] [2015-11-21 12:32:43,478] [transformer-akka.actor.default-dispatcher-15] a.SupervisorActor: received Client: Client(2, Jane, Smith)
[INFO] [2015-11-21 12:32:43,478] [transformer-akka.actor.default-dispatcher-15] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/1.json
[INFO] [2015-11-21 12:32:43,479] [transformer-akka.actor.default-dispatcher-15] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/1.json from file consisting of 46 bytes
[INFO] [2015-11-21 12:32:43,481] [transformer-akka.actor.default-dispatcher-15] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/2.json
[INFO] [2015-11-21 12:32:43,481] [transformer-akka.actor.default-dispatcher-15] a.SupervisorActor: received Client: Client(3, Tom, Jones)
[INFO] [2015-11-21 12:32:43,481] [transformer-akka.actor.default-dispatcher-15] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/2.json from file consisting of 48 bytes
[INFO] [2015-11-21 12:32:43,483] [transformer-akka.actor.default-dispatcher-15] a.SupervisorActor: received Client: Client(4, Edna, Post)
[INFO] [2015-11-21 12:32:43,484] [transformer-akka.actor.default-dispatcher-15] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/3.json
[INFO] [2015-11-21 12:32:43,484] [transformer-akka.actor.default-dispatcher-15] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/3.json from file consisting of 47 bytes
[INFO] [2015-11-21 12:32:43,486] [transformer-akka.actor.default-dispatcher-15] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/4.json
[INFO] [2015-11-21 12:32:43,486] [transformer-akka.actor.default-dispatcher-15] a.SupervisorActor: received Client: Client(5, Polly, Draper)
[INFO] [2015-11-21 12:32:43,486] [transformer-akka.actor.default-dispatcher-15] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/4.json from file consisting of 47 bytes
[INFO] [2015-11-21 12:32:43,488] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/5.json
[INFO] [2015-11-21 12:32:43,488] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: received Client: Client(6, Bob, Smith)
[INFO] [2015-11-21 12:32:43,488] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/5.json from file consisting of 50 bytes
[INFO] [2015-11-21 12:32:43,491] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/6.json
[INFO] [2015-11-21 12:32:43,491] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: received Client: Client(7, Wally, Abdo)
[INFO] [2015-11-21 12:32:43,491] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/6.json from file consisting of 47 bytes
[INFO] [2015-11-21 12:32:43,493] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: received Client: Client(8, Walter, White)
[INFO] [2015-11-21 12:32:43,493] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/7.json
[INFO] [2015-11-21 12:32:43,494] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/7.json from file consisting of 48 bytes
[INFO] [2015-11-21 12:32:43,495] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: received Client: Client(9, Andrew, Colt)
[INFO] [2015-11-21 12:32:43,496] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/8.json
[INFO] [2015-11-21 12:32:43,496] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/8.json from file consisting of 50 bytes
[INFO] [2015-11-21 12:32:43,497] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/9.json
[INFO] [2015-11-21 12:32:43,498] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: received Client: Client(10, Boyd, Madsen)
[INFO] [2015-11-21 12:32:43,498] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/9.json from file consisting of 49 bytes
[INFO] [2015-11-21 12:32:43,500] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: writing JSON file: /Users/jcohen66/src/scala/Transformer/10.json
[INFO] [2015-11-21 12:32:43,500] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:32:43,500] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:32:43,500] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:32:43,500] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:32:43,500] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:32:43,500] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:32:43,501] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:32:43,501] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:32:43,501] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: File write operation complete
[INFO] [2015-11-21 12:32:43,501] [transformer-akka.actor.default-dispatcher-19] a.FileWriterActor: wrote: /Users/jcohen66/src/scala/Transformer/10.json from file consisting of 50 bytes
[INFO] [2015-11-21 12:32:43,501] [transformer-akka.actor.default-dispatcher-19] a.SupervisorActor: File write operation complete
